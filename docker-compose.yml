version: '3'

services:
  kafka:
    image: confluentinc/cp-kafka:7.9.1
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "3000"
      KAFKA_LOG_DIRS: /tmp/spring-kraft-combined-logs
      KAFKA_METADATA_LOG_DIR: /tmp/spring-kraft-metadata-logs
      CLUSTER_ID: "spring-kafka-cluster-kotlin"
      KAFKA_GROUP_PROTOCOL_CONFIG_QUEUE_ENABLED: "true"
      KAFKA_GROUP_MAX_SIZE: "100"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: "6000"
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:29092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - kafka-net

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.1
    container_name: schema-registry
    hostname: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
    networks:
      - kafka-net

  kafka-topics:
    image: confluentinc/cp-kafka:7.9.1
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Kafka is ready, creating topic...' &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --topic parking-events-proto --partitions 3 --replication-factor 1 &&
        echo 'Topic Parking Events created successfully' &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --topic parking-occupancy-by-zone --partitions 3 --config cleanup.policy=compact &&
        echo 'Topic Occupancy By Zone created successfully'
      "
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge 