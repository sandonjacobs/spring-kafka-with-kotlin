2025-05-29 14:19:20.174 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:20.188 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:20.193 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:20.195 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:20.201 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 14:19:20.709 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 14:19:20.779 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state-store in regular mode
2025-05-29 14:19:20.779 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog test-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 14:19:20.779 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store zone-occupancy-state-store did not find checkpoint offset, hence would default to the starting offset at changelog test-app-zone-occupancy-state-store-changelog-0
2025-05-29 14:19:20.779 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Initialized
2025-05-29 14:19:20.790 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Restored and ready to run
2025-05-29 14:19:20.943 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=10, occupied=4
2025-05-29 14:19:21.118 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Suspended from RUNNING
2025-05-29 14:19:21.139 [Test worker] INFO  o.a.k.s.p.i.RecordCollectorImpl - topology-test-driver Closing record collector clean
2025-05-29 14:19:21.139 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Closed clean
2025-05-29 14:19:21.139 [Test worker] INFO  o.a.k.s.p.internals.StateDirectory - stream-thread [Test worker] Deleting task directory 0_0 for 0_0 as user calling cleanup.
2025-05-29 14:19:21.148 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:21.149 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:21.151 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:21.152 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:21.154 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 14:19:21.224 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 14:19:21.291 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state-store in regular mode
2025-05-29 14:19:21.292 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog test-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 14:19:21.292 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store zone-occupancy-state-store did not find checkpoint offset, hence would default to the starting offset at changelog test-app-zone-occupancy-state-store-changelog-0
2025-05-29 14:19:21.292 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Initialized
2025-05-29 14:19:21.300 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Restored and ready to run
2025-05-29 14:19:21.301 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 14:19:21.359 [Test worker] DEBUG c.e.p.s.ParkingOccupancyTopologyTest - Test completed successfully
2025-05-29 14:19:21.359 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Suspended from RUNNING
2025-05-29 14:19:21.376 [Test worker] INFO  o.a.k.s.p.i.RecordCollectorImpl - topology-test-driver Closing record collector clean
2025-05-29 14:19:21.376 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Closed clean
2025-05-29 14:19:21.376 [Test worker] INFO  o.a.k.s.p.internals.StateDirectory - stream-thread [Test worker] Deleting task directory 0_0 for 0_0 as user calling cleanup.
2025-05-29 14:19:21.382 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:21.383 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:21.385 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:21.386 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 14:19:21.387 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 14:19:21.454 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 14:19:21.524 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state-store in regular mode
2025-05-29 14:19:21.524 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog test-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 14:19:21.524 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store zone-occupancy-state-store did not find checkpoint offset, hence would default to the starting offset at changelog test-app-zone-occupancy-state-store-changelog-0
2025-05-29 14:19:21.524 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Initialized
2025-05-29 14:19:21.530 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Restored and ready to run
2025-05-29 14:19:21.532 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 14:19:21.592 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 14:19:21.654 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Suspended from RUNNING
2025-05-29 14:19:21.673 [Test worker] INFO  o.a.k.s.p.i.RecordCollectorImpl - topology-test-driver Closing record collector clean
2025-05-29 14:19:21.673 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Closed clean
2025-05-29 14:19:21.673 [Test worker] INFO  o.a.k.s.p.internals.StateDirectory - stream-thread [Test worker] Deleting task directory 0_0 for 0_0 as user calling cleanup.
2025-05-29 15:41:01.304 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:01.317 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:01.324 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:01.325 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:01.333 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 15:41:01.874 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 15:41:01.961 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state-store in regular mode
2025-05-29 15:41:01.962 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog test-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 15:41:01.963 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store zone-occupancy-state-store did not find checkpoint offset, hence would default to the starting offset at changelog test-app-zone-occupancy-state-store-changelog-0
2025-05-29 15:41:01.963 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Initialized
2025-05-29 15:41:01.980 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Restored and ready to run
2025-05-29 15:41:02.153 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=10, occupied=4
2025-05-29 15:41:02.323 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Suspended from RUNNING
2025-05-29 15:41:02.343 [Test worker] INFO  o.a.k.s.p.i.RecordCollectorImpl - topology-test-driver Closing record collector clean
2025-05-29 15:41:02.343 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Closed clean
2025-05-29 15:41:02.344 [Test worker] INFO  o.a.k.s.p.internals.StateDirectory - stream-thread [Test worker] Deleting task directory 0_0 for 0_0 as user calling cleanup.
2025-05-29 15:41:02.350 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:02.351 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:02.351 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:02.352 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:02.354 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 15:41:02.419 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 15:41:02.480 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state-store in regular mode
2025-05-29 15:41:02.481 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog test-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 15:41:02.481 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store zone-occupancy-state-store did not find checkpoint offset, hence would default to the starting offset at changelog test-app-zone-occupancy-state-store-changelog-0
2025-05-29 15:41:02.481 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Initialized
2025-05-29 15:41:02.486 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Restored and ready to run
2025-05-29 15:41:02.487 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 15:41:02.542 [Test worker] DEBUG c.e.p.s.ParkingOccupancyTopologyTest - Test completed successfully
2025-05-29 15:41:02.543 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Suspended from RUNNING
2025-05-29 15:41:02.559 [Test worker] INFO  o.a.k.s.p.i.RecordCollectorImpl - topology-test-driver Closing record collector clean
2025-05-29 15:41:02.559 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Closed clean
2025-05-29 15:41:02.559 [Test worker] INFO  o.a.k.s.p.internals.StateDirectory - stream-thread [Test worker] Deleting task directory 0_0 for 0_0 as user calling cleanup.
2025-05-29 15:41:02.563 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:02.565 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:02.566 [Test worker] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:02.567 [Test worker] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [mock://]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:41:02.567 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 15:41:02.631 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 15:41:02.691 [Test worker] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state-store in regular mode
2025-05-29 15:41:02.692 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog test-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 15:41:02.692 [Test worker] INFO  o.a.k.s.p.i.ProcessorStateManager - topology-test-driver State store zone-occupancy-state-store did not find checkpoint offset, hence would default to the starting offset at changelog test-app-zone-occupancy-state-store-changelog-0
2025-05-29 15:41:02.692 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Initialized
2025-05-29 15:41:02.698 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Restored and ready to run
2025-05-29 15:41:02.700 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 15:41:02.759 [Test worker] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 15:41:02.829 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Suspended from RUNNING
2025-05-29 15:41:02.852 [Test worker] INFO  o.a.k.s.p.i.RecordCollectorImpl - topology-test-driver Closing record collector clean
2025-05-29 15:41:02.853 [Test worker] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [Test worker] task [0_0] Closed clean
2025-05-29 15:41:02.854 [Test worker] INFO  o.a.k.s.p.internals.StateDirectory - stream-thread [Test worker] Deleting task directory 0_0 for 0_0 as user calling cleanup.
2025-05-29 15:58:59.390 [main] INFO  c.e.p.ParkingServiceApplicationKt - Starting ParkingServiceApplicationKt using Java 17.0.9 with PID 61073 (/Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin/build/classes/kotlin/main started by sjacobs in /Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin)
2025-05-29 15:58:59.392 [main] INFO  c.e.p.ParkingServiceApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-05-29 15:59:00.028 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-29 15:59:00.033 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-29 15:59:00.034 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-29 15:59:00.034 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-05-29 15:59:00.058 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-29 15:59:00.059 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 649 ms
2025-05-29 15:59:00.189 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:59:00.267 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:59:00.272 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:59:00.273 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 15:59:00.295 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 15:59:00.305 [main] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 15:59:00.374 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-05-29 15:59:00.603 [main] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'parkingZones' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-05-29 15:59:00.667 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-29 15:59:00.713 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-29 15:59:00.719 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-05-29 15:59:00.721 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 15:59:00.738 [main] WARN  o.a.k.s.p.internals.StateDirectory - Using an OS temp directory in the state.dir property can cause failures with writing the checkpoint file due to the fact that this directory can be cleared by the OS. Resolved state.dir: [/var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams]
2025-05-29 15:59:00.760 [main] INFO  o.a.k.s.p.internals.StateDirectory - Reading UUID from process file: f294a983-f966-41c8-bf03-75531a0ecc72
2025-05-29 15:59:00.766 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-05-29 15:59:00.787 [main] INFO  o.a.k.c.admin.AdminClientConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 15:59:00.788 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 15:59:00.788 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 15:59:00.788 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748548740787
2025-05-29 15:59:00.789 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams version: 3.9.1
2025-05-29 15:59:00.789 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams commit ID: f745dfdcee2b9851
2025-05-29 15:59:00.794 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating restore consumer client
2025-05-29 15:59:00.795 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = null
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 15:59:00.811 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 15:59:00.829 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 15:59:00.829 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 15:59:00.829 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 15:59:00.829 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748548740829
2025-05-29 15:59:00.832 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating thread producer client
2025-05-29 15:59:00.835 [main] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 100
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2025-05-29 15:59:00.836 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 15:59:00.841 [main] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Instantiated an idempotent producer.
2025-05-29 15:59:00.848 [main] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 15:59:00.848 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 15:59:00.848 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 15:59:00.848 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748548740848
2025-05-29 15:59:00.852 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread started
2025-05-29 15:59:00.855 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating consumer client
2025-05-29 15:59:00.856 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = false
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-parking-events-app
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 15:59:00.860 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 15:59:00.866 [main] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Cooperative rebalancing protocol is enabled now
2025-05-29 15:59:00.875 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[replication.factor, probing.rebalance.interval.ms, max.warmup.replicas, acceptable.recovery.lag, schema.registry.url, task.assignor.class, rack.aware.assignment.non_overlap_cost, application.server, rack.aware.assignment.strategy, rack.aware.assignment.traffic_cost, windowstore.changelog.additional.retention.ms, num.standby.replicas, upgrade.from, rack.aware.assignment.tags, application.id]' were supplied but are not used yet.
2025-05-29 15:59:00.875 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 15:59:00.875 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 15:59:00.875 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748548740875
2025-05-29 15:59:00.877 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from CREATED to REBALANCING
2025-05-29 15:59:00.878 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Started 1 stream threads
2025-05-29 15:59:00.878 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Starting
2025-05-29 15:59:00.878 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from CREATED to STARTING
2025-05-29 15:59:00.878 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Subscribed to topic(s): parking-events-proto, parking-occupancy-by-zone
2025-05-29 15:59:00.899 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-zone-status-cache-updater-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = zone-status-cache-updater
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-05-29 15:59:00.899 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 15:59:00.907 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 15:59:00.909 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 15:59:00.909 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 15:59:00.909 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748548740909
2025-05-29 15:59:00.912 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Subscribed to topic(s): parking-occupancy-by-zone
2025-05-29 15:59:00.927 [main] INFO  c.e.p.ParkingServiceApplicationKt - Started ParkingServiceApplicationKt in 1.699 seconds (process running for 2.564)
2025-05-29 15:59:00.933 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = parking-service-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-05-29 15:59:00.933 [scheduling-1] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 15:59:00.934 [scheduling-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Instantiated an idempotent producer.
2025-05-29 15:59:00.935 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 15:59:00.935 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 15:59:00.935 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 15:59:00.935 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748548740935
2025-05-29 15:59:00.982 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Processed 0 total records, ran 0 punctuators, polled 1 times and committed 0 total tasks since the last update 1748548740983ms ago
2025-05-29 15:59:00.991 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 15:59:00.991 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 15:59:00.991 [kafka-producer-network-thread | parking-service-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=parking-service-producer-1] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 15:59:00.991 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 15:59:00.991 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] ProducerId set to 21 with epoch 0
2025-05-29 15:59:00.991 [kafka-producer-network-thread | parking-service-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=parking-service-producer-1] ProducerId set to 20 with epoch 0
2025-05-29 15:59:00.991 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 15:59:00.991 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 15:59:00.993 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 15:59:00.993 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 15:59:00.993 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:01.003 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Request joining group due to: need to re-join with the given member-id: spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-bf50d889-246b-4718-ac09-ccc5707ce436
2025-05-29 15:59:01.003 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: need to re-join with the given member-id: consumer-zone-status-cache-updater-1-7bf2b4b5-8940-441c-ace0-3f9bc13cd7ac
2025-05-29 15:59:01.003 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 15:59:01.003 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 15:59:01.249 [RMI TCP Connection(1)-192.168.1.14] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-29 15:59:01.249 [RMI TCP Connection(1)-192.168.1.14] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-29 15:59:01.250 [RMI TCP Connection(1)-192.168.1.14] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-29 15:59:01.932 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:02.927 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:03.932 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:04.010 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully joined group with generation Generation{generationId=1, memberId='consumer-zone-status-cache-updater-1-7bf2b4b5-8940-441c-ace0-3f9bc13cd7ac', protocol='range'}
2025-05-29 15:59:04.010 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully joined group with generation Generation{generationId=30, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-bf50d889-246b-4718-ac09-ccc5707ce436', protocol='stream'}
2025-05-29 15:59:04.022 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Finished assignment for group at generation 1: {consumer-zone-status-cache-updater-1-7bf2b4b5-8940-441c-ace0-3f9bc13cd7ac=Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])}
2025-05-29 15:59:04.023 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RepartitionTopics - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Skipping the repartition topic validation since there are no repartition topics.
2025-05-29 15:59:04.033 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully synced group in generation Generation{generationId=1, memberId='consumer-zone-status-cache-updater-1-7bf2b4b5-8940-441c-ace0-3f9bc13cd7ac', protocol='range'}
2025-05-29 15:59:04.034 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Notifying assignor about the new Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])
2025-05-29 15:59:04.036 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Adding newly assigned partitions: parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 15:59:04.040 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 15:59:04.041 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-1
2025-05-29 15:59:04.041 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 15:59:04.044 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 15:59:04.044 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-1
2025-05-29 15:59:04.044 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 15:59:04.052 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting offset for partition parking-occupancy-by-zone-2 to position FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:04.053 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting offset for partition parking-occupancy-by-zone-1 to position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:04.053 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting offset for partition parking-occupancy-by-zone-0 to position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:04.058 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions assigned: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 15:59:04.080 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] 1 client nodes and 1 consumers participating in this rebalance: 
f294a983-f966-41c8-bf03-75531a0ecc72: [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-bf50d889-246b-4718-ac09-ccc5707ce436].
2025-05-29 15:59:04.080 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigning stateful tasks: [0_2, 0_1, 0_0]
and stateless tasks: []
2025-05-29 15:59:04.080 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No custom task assignors found, defaulting to internal task assignment with internal.task.assignor.class
2025-05-29 15:59:04.083 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.HighAvailabilityTaskAssignor - Decided on assignment: {f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([]) prevActiveTasks: ([]) prevStandbyTasks: ([0_0, 0_1, 0_2]) changelogOffsetTotalsByTask: ([0_0=2, 0_1=4, 0_2=1]) taskLagTotals: ([0_0=1, 0_1=1, 0_2=1]) clientTags: ([]) capacity: 1 assigned: 3]} with no followup probing rebalance.
2025-05-29 15:59:04.084 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigned 3 total tasks including 3 stateful tasks to 1 client nodes.
2025-05-29 15:59:04.084 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assignment of tasks to nodes: f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([])]
2025-05-29 15:59:04.085 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Client f294a983-f966-41c8-bf03-75531a0ecc72 per-consumer assignment:
	prev owned active {}
	prev owned standby {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-bf50d889-246b-4718-ac09-ccc5707ce436=[0_2, 0_1, 0_0]}
	assigned active {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-bf50d889-246b-4718-ac09-ccc5707ce436=[0_2, 0_1, 0_0]}
	revoking active {}
	assigned standby {}

2025-05-29 15:59:04.085 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Finished stable assignment of tasks, no followup rebalances required.
2025-05-29 15:59:04.086 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Finished assignment for group at generation 30: {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-bf50d889-246b-4718-ac09-ccc5707ce436=Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)}
2025-05-29 15:59:04.087 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully synced group in generation Generation{generationId=30, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-bf50d889-246b-4718-ac09-ccc5707ce436', protocol='stream'}
2025-05-29 15:59:04.087 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Updating assignment with
	Assigned partitions:                       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Current owned partitions:                  []
	Added partitions (assigned - owned):       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Revoked partitions (owned - assigned):     []

2025-05-29 15:59:04.087 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Notifying assignor about the new Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)
2025-05-29 15:59:04.088 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No followup rebalance was requested, resetting the rebalance schedule.
2025-05-29 15:59:04.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Handle new assignment with:
	New active tasks: [0_2, 0_1, 0_0]
	New standby tasks: []
	Existing active tasks: []
	Existing standby tasks: []
2025-05-29 15:59:04.100 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Adding newly assigned partitions: parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 15:59:04.100 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from STARTING to PARTITIONS_ASSIGNED
2025-05-29 15:59:04.101 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 15:59:04.101 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-1
2025-05-29 15:59:04.101 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 15:59:04.101 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-2 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 15:59:04.101 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-1 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 15:59:04.101 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 15:59:04.104 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:04.104 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:04.104 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:04.489 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 15:59:04.524 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 15:59:04.524 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset 4 at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 15:59:04.524 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 15:59:04.524 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Initialized
2025-05-29 15:59:04.525 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 was added to the state updater
2025-05-29 15:59:04.528 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-1 initialized as 0.
2025-05-29 15:59:04.529 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 initialized as 5.
2025-05-29 15:59:04.529 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 15:59:04.529 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 5 for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 15:59:04.529 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 15:59:04.534 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 15:59:04.539 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:04.556 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 15:59:04.586 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 15:59:04.587 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset 1 at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 15:59:04.587 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 15:59:04.587 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Initialized
2025-05-29 15:59:04.616 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 15:59:04.642 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-1 to store zone-occupancy-state with a total number of 0 records
2025-05-29 15:59:04.643 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 15:59:04.644 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 15:59:04.644 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset 2 at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 15:59:04.645 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 15:59:04.645 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Initialized
2025-05-29 15:59:04.655 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 15:59:04.655 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 completed restoration
2025-05-29 15:59:04.656 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 was added to the state updater
2025-05-29 15:59:04.656 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 was added to the state updater
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-0 initialized as 0.
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 initialized as 2.
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-2 initialized as 0.
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 initialized as 3.
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-0, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2, spring-parking-events-app-zone-occupancy-state-changelog-2, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 3 for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 2 for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 15:59:04.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 15:59:04.750 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-1
2025-05-29 15:59:04.764 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Restored and ready to run
2025-05-29 15:59:04.865 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-1 in order to compute lag
2025-05-29 15:59:04.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-1 in order to compute lag
2025-05-29 15:59:04.931 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:05.045 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:05.045 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 15:59:05.148 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-0 to store zone-occupancy-state with a total number of 0 records
2025-05-29 15:59:05.148 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 15:59:05.148 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-2 to store zone-occupancy-state with a total number of 0 records
2025-05-29 15:59:05.148 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 15:59:05.161 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-0, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 15:59:05.161 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 completed restoration
2025-05-29 15:59:05.172 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 15:59:05.172 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 completed restoration
2025-05-29 15:59:05.175 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 15:59:05.186 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Restored and ready to run
2025-05-29 15:59:05.188 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 15:59:05.199 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Restored and ready to run
2025-05-29 15:59:05.199 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PARTITIONS_ASSIGNED to RUNNING
2025-05-29 15:59:05.201 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from REBALANCING to RUNNING
2025-05-29 15:59:05.302 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-0 in order to compute lag
2025-05-29 15:59:05.302 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-0 in order to compute lag
2025-05-29 15:59:05.302 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-2 in order to compute lag
2025-05-29 15:59:05.303 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-2 in order to compute lag
2025-05-29 15:59:05.932 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:06.931 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:07.929 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:08.929 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:09.930 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:10.927 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:11.932 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:12.932 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.apache.kafka.common.errors.SerializationException: Can't convert value of class com.example.parking.model.ParkingEvent to class org.apache.kafka.common.serialization.StringSerializer specified in value.serializer
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1049)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:993)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:1103)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:852)
	at org.springframework.kafka.core.KafkaTemplate.observeSend(KafkaTemplate.java:820)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:603)
	at com.example.parking.generator.ParkingEventGenerator.generateParkingEvents(ParkingEventGenerator.kt:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.ClassCastException: class com.example.parking.model.ParkingEvent cannot be cast to class java.lang.String (com.example.parking.model.ParkingEvent is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
	at org.apache.kafka.common.serialization.StringSerializer.serialize(StringSerializer.java:31)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:1046)
	... 23 common frames omitted
2025-05-29 15:59:13.366 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Revoke previously assigned partitions parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 15:59:13.366 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions revoked: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 15:59:13.366 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Member consumer-zone-status-cache-updater-1-7bf2b4b5-8940-441c-ace0-3f9bc13cd7ac sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-05-29 15:59:13.367 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 15:59:13.367 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 15:59:13.367 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 15:59:13.368 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 15:59:13.368 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 15:59:13.657 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 15:59:13.657 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 15:59:13.657 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 15:59:13.657 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 15:59:13.660 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-zone-status-cache-updater-1 unregistered
2025-05-29 15:59:13.660 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: Consumer stopped
2025-05-29 15:59:13.660 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 15:59:13.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Informed to shut down
2025-05-29 15:59:13.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 15:59:13.661 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutting down 1 stream threads
2025-05-29 15:59:13.748 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutting down clean
2025-05-29 15:59:13.748 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Shutting down state updater thread
2025-05-29 15:59:13.748 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 15:59:13.748 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread stopped
2025-05-29 15:59:13.782 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Suspended from RUNNING
2025-05-29 15:59:13.788 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] Closing record collector clean
2025-05-29 15:59:13.788 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Closed clean
2025-05-29 15:59:13.789 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Suspended from RUNNING
2025-05-29 15:59:13.792 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] Closing record collector clean
2025-05-29 15:59:13.792 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Closed clean
2025-05-29 15:59:13.792 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Suspended from RUNNING
2025-05-29 15:59:13.795 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] Closing record collector clean
2025-05-29 15:59:13.795 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Closed clean
2025-05-29 15:59:13.795 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2025-05-29 15:59:13.797 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 15:59:13.797 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 15:59:13.797 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 15:59:13.797 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 15:59:13.797 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer unregistered
2025-05-29 15:59:13.797 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 15:59:13.798 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 15:59:13.851 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 15:59:13.851 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 15:59:13.851 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 15:59:13.851 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 15:59:13.853 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer unregistered
2025-05-29 15:59:13.854 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Node 1 sent an invalid full fetch response with extraIds=(0v7V4M0CSi2-RTsjB6wibg, mClZU00aQ7aoPHrr6Lqqdw), response=()
2025-05-29 15:59:13.854 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 15:59:13.855 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 15:59:13.855 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 15:59:13.855 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 15:59:13.856 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer unregistered
2025-05-29 15:59:13.857 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PENDING_SHUTDOWN to DEAD
2025-05-29 15:59:13.857 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 15:59:13.857 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutdown 1 stream threads complete
2025-05-29 15:59:13.857 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin unregistered
2025-05-29 15:59:13.858 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 15:59:13.858 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 15:59:13.858 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 15:59:13.858 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 15:59:13.858 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 15:59:13.858 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 15:59:13.858 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from PENDING_SHUTDOWN to NOT_RUNNING
2025-05-29 15:59:13.858 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Streams client stopped completely
2025-05-29 15:59:13.859 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-29 15:59:13.864 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-29 15:59:13.865 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-05-29 15:59:13.866 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 15:59:13.866 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 15:59:13.866 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 15:59:13.866 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 15:59:13.866 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for parking-service-producer-1 unregistered
2025-05-29 17:31:17.376 [main] INFO  c.e.p.ParkingServiceApplicationKt - Starting ParkingServiceApplicationKt using Java 17.0.9 with PID 74898 (/Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin/build/classes/kotlin/main started by sjacobs in /Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin)
2025-05-29 17:31:17.378 [main] INFO  c.e.p.ParkingServiceApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-05-29 17:31:18.076 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-29 17:31:18.081 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-29 17:31:18.082 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-29 17:31:18.082 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-05-29 17:31:18.105 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-29 17:31:18.105 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 705 ms
2025-05-29 17:31:18.237 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:31:18.301 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:31:18.305 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:31:18.306 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:31:18.323 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:31:18.332 [main] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 17:31:18.408 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-05-29 17:31:18.629 [main] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'parkingZones' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-05-29 17:31:18.703 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-29 17:31:18.746 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-29 17:31:18.752 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-05-29 17:31:18.753 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:31:18.769 [main] WARN  o.a.k.s.p.internals.StateDirectory - Using an OS temp directory in the state.dir property can cause failures with writing the checkpoint file due to the fact that this directory can be cleared by the OS. Resolved state.dir: [/var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams]
2025-05-29 17:31:18.792 [main] INFO  o.a.k.s.p.internals.StateDirectory - Reading UUID from process file: f294a983-f966-41c8-bf03-75531a0ecc72
2025-05-29 17:31:18.798 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-05-29 17:31:18.822 [main] INFO  o.a.k.c.admin.AdminClientConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:31:18.822 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:31:18.822 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:31:18.822 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554278822
2025-05-29 17:31:18.823 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams version: 3.9.1
2025-05-29 17:31:18.823 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams commit ID: f745dfdcee2b9851
2025-05-29 17:31:18.830 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating restore consumer client
2025-05-29 17:31:18.832 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = null
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:31:18.852 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:31:18.870 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:31:18.870 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:31:18.870 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:31:18.870 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554278870
2025-05-29 17:31:18.873 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating thread producer client
2025-05-29 17:31:18.878 [main] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 100
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2025-05-29 17:31:18.879 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:31:18.884 [main] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Instantiated an idempotent producer.
2025-05-29 17:31:18.891 [main] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:31:18.891 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:31:18.891 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:31:18.891 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554278891
2025-05-29 17:31:18.895 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread started
2025-05-29 17:31:18.897 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating consumer client
2025-05-29 17:31:18.899 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = false
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-parking-events-app
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:31:18.902 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:31:18.907 [main] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Cooperative rebalancing protocol is enabled now
2025-05-29 17:31:18.916 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[replication.factor, probing.rebalance.interval.ms, max.warmup.replicas, acceptable.recovery.lag, schema.registry.url, task.assignor.class, rack.aware.assignment.non_overlap_cost, application.server, rack.aware.assignment.strategy, rack.aware.assignment.traffic_cost, windowstore.changelog.additional.retention.ms, num.standby.replicas, upgrade.from, rack.aware.assignment.tags, application.id]' were supplied but are not used yet.
2025-05-29 17:31:18.916 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:31:18.916 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:31:18.916 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554278916
2025-05-29 17:31:18.918 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from CREATED to REBALANCING
2025-05-29 17:31:18.919 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Started 1 stream threads
2025-05-29 17:31:18.919 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Starting
2025-05-29 17:31:18.919 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from CREATED to STARTING
2025-05-29 17:31:18.919 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Subscribed to topic(s): parking-events-proto, parking-occupancy-by-zone
2025-05-29 17:31:18.935 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-zone-status-cache-updater-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = zone-status-cache-updater
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-05-29 17:31:18.936 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:31:18.942 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:31:18.942 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:31:18.942 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:31:18.942 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554278942
2025-05-29 17:31:18.944 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Subscribed to topic(s): parking-occupancy-by-zone
2025-05-29 17:31:18.956 [main] INFO  c.e.p.ParkingServiceApplicationKt - Started ParkingServiceApplicationKt in 1.79 seconds (process running for 2.561)
2025-05-29 17:31:18.967 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = parking-service-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer

2025-05-29 17:31:18.967 [scheduling-1] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:31:18.968 [scheduling-1] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:31:18.968 [scheduling-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Instantiated an idempotent producer.
2025-05-29 17:31:18.970 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:31:18.970 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:31:18.970 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:31:18.970 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554278970
2025-05-29 17:31:19.023 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Processed 0 total records, ran 0 punctuators, polled 1 times and committed 0 total tasks since the last update 1748554279023ms ago
2025-05-29 17:31:19.023 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:31:19.024 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:31:19.024 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:31:19.024 [kafka-producer-network-thread | parking-service-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=parking-service-producer-1] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:31:19.024 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:31:19.024 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:31:19.024 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:31:19.024 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:31:19.033 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: need to re-join with the given member-id: consumer-zone-status-cache-updater-1-38fa8dd8-f0bc-4450-bbfd-ded110ffec2a
2025-05-29 17:31:19.033 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:31:19.035 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Request joining group due to: need to re-join with the given member-id: spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-a2133ea0-7880-4b31-99b8-b8fbb9f94f2c
2025-05-29 17:31:19.035 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:31:19.133 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] ProducerId set to 0 with epoch 0
2025-05-29 17:31:19.136 [kafka-producer-network-thread | parking-service-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=parking-service-producer-1] ProducerId set to 1 with epoch 0
2025-05-29 17:31:19.281 [RMI TCP Connection(1)-192.168.68.224] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-29 17:31:19.281 [RMI TCP Connection(1)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-29 17:31:19.282 [RMI TCP Connection(1)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-29 17:31:22.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully joined group with generation Generation{generationId=1, memberId='consumer-zone-status-cache-updater-1-38fa8dd8-f0bc-4450-bbfd-ded110ffec2a', protocol='range'}
2025-05-29 17:31:22.067 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully joined group with generation Generation{generationId=1, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-a2133ea0-7880-4b31-99b8-b8fbb9f94f2c', protocol='stream'}
2025-05-29 17:31:22.075 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RepartitionTopics - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Skipping the repartition topic validation since there are no repartition topics.
2025-05-29 17:31:22.076 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Finished assignment for group at generation 1: {consumer-zone-status-cache-updater-1-38fa8dd8-f0bc-4450-bbfd-ded110ffec2a=Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])}
2025-05-29 17:31:22.082 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully synced group in generation Generation{generationId=1, memberId='consumer-zone-status-cache-updater-1-38fa8dd8-f0bc-4450-bbfd-ded110ffec2a', protocol='range'}
2025-05-29 17:31:22.083 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Notifying assignor about the new Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])
2025-05-29 17:31:22.085 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Adding newly assigned partitions: parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:31:22.103 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:31:22.103 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-1
2025-05-29 17:31:22.103 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:31:22.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:31:22.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-1
2025-05-29 17:31:22.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:31:22.123 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting offset for partition parking-occupancy-by-zone-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting offset for partition parking-occupancy-by-zone-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting offset for partition parking-occupancy-by-zone-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.158 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions assigned: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:31:22.181 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] WARN  o.a.k.s.p.i.assignment.ClientState - Task 0_2 had endOffsetSum=0 smaller than offsetSum=1 on member f294a983-f966-41c8-bf03-75531a0ecc72. This probably means the task is corrupted, which in turn indicates that it will need to restore from scratch if it gets assigned. The assignor will de-prioritize returning this task to this member in the hopes that some other member may be able to re-use its state.
2025-05-29 17:31:22.182 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] WARN  o.a.k.s.p.i.assignment.ClientState - Task 0_1 had endOffsetSum=0 smaller than offsetSum=4 on member f294a983-f966-41c8-bf03-75531a0ecc72. This probably means the task is corrupted, which in turn indicates that it will need to restore from scratch if it gets assigned. The assignor will de-prioritize returning this task to this member in the hopes that some other member may be able to re-use its state.
2025-05-29 17:31:22.182 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] WARN  o.a.k.s.p.i.assignment.ClientState - Task 0_0 had endOffsetSum=0 smaller than offsetSum=2 on member f294a983-f966-41c8-bf03-75531a0ecc72. This probably means the task is corrupted, which in turn indicates that it will need to restore from scratch if it gets assigned. The assignor will de-prioritize returning this task to this member in the hopes that some other member may be able to re-use its state.
2025-05-29 17:31:22.183 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] 1 client nodes and 1 consumers participating in this rebalance: 
f294a983-f966-41c8-bf03-75531a0ecc72: [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-a2133ea0-7880-4b31-99b8-b8fbb9f94f2c].
2025-05-29 17:31:22.183 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigning stateful tasks: [0_2, 0_1, 0_0]
and stateless tasks: []
2025-05-29 17:31:22.183 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No custom task assignors found, defaulting to internal task assignment with internal.task.assignor.class
2025-05-29 17:31:22.188 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.HighAvailabilityTaskAssignor - Decided on assignment: {f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([]) prevActiveTasks: ([]) prevStandbyTasks: ([0_0, 0_1, 0_2]) changelogOffsetTotalsByTask: ([0_0=2, 0_1=4, 0_2=1]) taskLagTotals: ([0_0=0, 0_1=0, 0_2=0]) clientTags: ([]) capacity: 1 assigned: 3]} with no followup probing rebalance.
2025-05-29 17:31:22.188 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigned 3 total tasks including 3 stateful tasks to 1 client nodes.
2025-05-29 17:31:22.189 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assignment of tasks to nodes: f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([])]
2025-05-29 17:31:22.191 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Client f294a983-f966-41c8-bf03-75531a0ecc72 per-consumer assignment:
	prev owned active {}
	prev owned standby {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-a2133ea0-7880-4b31-99b8-b8fbb9f94f2c=[0_2, 0_1, 0_0]}
	assigned active {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-a2133ea0-7880-4b31-99b8-b8fbb9f94f2c=[0_2, 0_1, 0_0]}
	revoking active {}
	assigned standby {}

2025-05-29 17:31:22.191 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Finished stable assignment of tasks, no followup rebalances required.
2025-05-29 17:31:22.191 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Finished assignment for group at generation 1: {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-a2133ea0-7880-4b31-99b8-b8fbb9f94f2c=Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)}
2025-05-29 17:31:22.194 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully synced group in generation Generation{generationId=1, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-a2133ea0-7880-4b31-99b8-b8fbb9f94f2c', protocol='stream'}
2025-05-29 17:31:22.194 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Updating assignment with
	Assigned partitions:                       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Current owned partitions:                  []
	Added partitions (assigned - owned):       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Revoked partitions (owned - assigned):     []

2025-05-29 17:31:22.194 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Notifying assignor about the new Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)
2025-05-29 17:31:22.194 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No followup rebalance was requested, resetting the rebalance schedule.
2025-05-29 17:31:22.196 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Handle new assignment with:
	New active tasks: [0_2, 0_1, 0_0]
	New standby tasks: []
	Existing active tasks: []
	Existing standby tasks: []
2025-05-29 17:31:22.209 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Adding newly assigned partitions: parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:31:22.209 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from STARTING to PARTITIONS_ASSIGNED
2025-05-29 17:31:22.211 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:31:22.211 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 17:31:22.211 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-1
2025-05-29 17:31:22.211 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-1
2025-05-29 17:31:22.211 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:31:22.211 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 17:31:22.213 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.213 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.213 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.213 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.213 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.213 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.709 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:31:22.748 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:31:22.748 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset 4 at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:31:22.748 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:31:22.748 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Initialized
2025-05-29 17:31:22.749 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 was added to the state updater
2025-05-29 17:31:22.757 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-1 initialized as 0.
2025-05-29 17:31:22.758 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 initialized as 0.
2025-05-29 17:31:22.758 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:31:22.759 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 5 for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:31:22.759 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:31:22.766 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:31:22.772 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.779 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:31:22.784 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.internals.FetchCollector - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Fetch position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1, raising error to the application since no reset policy is configured
2025-05-29 17:31:22.788 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] WARN  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Encountered org.apache.kafka.clients.consumer.OffsetOutOfRangeException fetching records from restore consumer for partitions [spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1], it is likely that the consumer's position has fallen out of the topic partition offset range because the topic was truncated or compacted on the broker, marking the corresponding tasks as corrupted and re-initializing it later.
org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
2025-05-29 17:31:22.792 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Encountered task corrupted exception: 
org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_1] are corrupted and hence need to be re-initialized
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:508)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
Caused by: org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	... 4 common frames omitted
2025-05-29 17:31:22.797 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:22.807 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:31:22.808 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset 2 at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:31:22.808 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:31:22.808 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Initialized
2025-05-29 17:31:22.808 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 was added to the state updater
2025-05-29 17:31:22.813 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-0 initialized as 0.
2025-05-29 17:31:22.816 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 initialized as 0.
2025-05-29 17:31:22.816 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-0, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:31:22.816 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 3 for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:31:22.816 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:31:22.819 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.825 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.internals.FetchCollector - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Fetch position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0, raising error to the application since no reset policy is configured
2025-05-29 17:31:22.826 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] WARN  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Encountered org.apache.kafka.clients.consumer.OffsetOutOfRangeException fetching records from restore consumer for partitions [spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0], it is likely that the consumer's position has fallen out of the topic partition offset range because the topic was truncated or compacted on the broker, marking the corresponding tasks as corrupted and re-initializing it later.
org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
2025-05-29 17:31:22.826 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Encountered task corrupted exception: 
org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_0] are corrupted and hence need to be re-initialized
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:508)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
Caused by: org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	... 4 common frames omitted
2025-05-29 17:31:22.827 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:22.836 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:31:22.866 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:31:22.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset 1 at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:31:22.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:31:22.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Initialized
2025-05-29 17:31:22.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 was added to the state updater
2025-05-29 17:31:22.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] ERROR o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Get exceptions for the following tasks: {0_1=org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_1] are corrupted and hence need to be re-initialized, 0_0=org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_0] are corrupted and hence need to be re-initialized}
2025-05-29 17:31:22.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] WARN  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Encounter corrupted task 0_1, will group it with other corrupted tasks and handle together
org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_1] are corrupted and hence need to be re-initialized
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:508)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
Caused by: org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	... 4 common frames omitted
2025-05-29 17:31:22.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] WARN  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Encounter corrupted task 0_0, will group it with other corrupted tasks and handle together
org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_0] are corrupted and hence need to be re-initialized
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:508)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
Caused by: org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	... 4 common frames omitted
2025-05-29 17:31:22.867 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] WARN  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Detected the states of tasks [0_1, 0_0] are corrupted. Will close the task as dirty and re-create and bootstrap from scratch.
org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_1, 0_0] are corrupted and hence need to be re-initialized
	at org.apache.kafka.streams.processor.internals.TaskManager.maybeThrowTaskExceptions(TaskManager.java:437)
	at org.apache.kafka.streams.processor.internals.TaskManager.handleExceptionsFromStateUpdater(TaskManager.java:1034)
	at org.apache.kafka.streams.processor.internals.TaskManager.checkStateUpdater(TaskManager.java:917)
	at org.apache.kafka.streams.processor.internals.StreamThread.checkStateUpdater(StreamThread.java:1191)
	at org.apache.kafka.streams.processor.internals.StreamThread.runOnceWithoutProcessingThreads(StreamThread.java:999)
	at org.apache.kafka.streams.processor.internals.StreamThread.runLoop(StreamThread.java:713)
	at org.apache.kafka.streams.processor.internals.StreamThread.run(StreamThread.java:672)
2025-05-29 17:31:22.868 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Suspended from RESTORING
2025-05-29 17:31:22.873 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] Closing record collector dirty
2025-05-29 17:31:22.873 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Closed dirty
2025-05-29 17:31:22.874 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Suspended from RESTORING
2025-05-29 17:31:22.874 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 initialized as 0.
2025-05-29 17:31:22.874 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-2 initialized as 0.
2025-05-29 17:31:22.874 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2, spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:31:22.874 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 2 for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:31:22.874 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:31:22.876 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] Closing record collector dirty
2025-05-29 17:31:22.876 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Closed dirty
2025-05-29 17:31:22.878 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:22.881 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.internals.FetchCollector - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Fetch position FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2, raising error to the application since no reset policy is configured
2025-05-29 17:31:22.881 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] WARN  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Encountered org.apache.kafka.clients.consumer.OffsetOutOfRangeException fetching records from restore consumer for partitions [spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2], it is likely that the consumer's position has fallen out of the topic partition offset range because the topic was truncated or compacted on the broker, marking the corresponding tasks as corrupted and re-initializing it later.
org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
2025-05-29 17:31:22.881 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Encountered task corrupted exception: 
org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_2] are corrupted and hence need to be re-initialized
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:508)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
Caused by: org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	... 4 common frames omitted
2025-05-29 17:31:22.882 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:23.007 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:31:23.036 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:31:23.037 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:31:23.037 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store zone-occupancy-state did not find checkpoint offset, hence would default to the starting offset at changelog spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:31:23.037 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Initialized
2025-05-29 17:31:23.037 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 was added to the state updater
2025-05-29 17:31:23.041 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-1 initialized as 0.
2025-05-29 17:31:23.044 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 initialized as 0.
2025-05-29 17:31:23.044 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:31:23.044 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:31:23.044 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:31:23.047 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:23.048 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:23.061 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:31:23.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:31:23.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:31:23.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store zone-occupancy-state did not find checkpoint offset, hence would default to the starting offset at changelog spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:31:23.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Initialized
2025-05-29 17:31:23.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] ERROR o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Get exceptions for the following tasks: {0_2=org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_2] are corrupted and hence need to be re-initialized}
2025-05-29 17:31:23.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] WARN  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Encounter corrupted task 0_2, will group it with other corrupted tasks and handle together
org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_2] are corrupted and hence need to be re-initialized
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:508)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.restore(StoreChangelogReader.java:451)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.restoreTasks(DefaultStateUpdater.java:247)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.runOnce(DefaultStateUpdater.java:185)
	at org.apache.kafka.streams.processor.internals.DefaultStateUpdater$StateUpdaterThread.run(DefaultStateUpdater.java:148)
Caused by: org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}} is out of range for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
	at org.apache.kafka.clients.consumer.internals.FetchCollector.handleInitializeErrors(FetchCollector.java:365)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.initialize(FetchCollector.java:231)
	at org.apache.kafka.clients.consumer.internals.FetchCollector.collectFetch(FetchCollector.java:111)
	at org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch(Fetcher.java:146)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.pollForFetches(ClassicKafkaConsumer.java:699)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:623)
	at org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer.poll(ClassicKafkaConsumer.java:596)
	at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:874)
	at org.apache.kafka.streams.processor.internals.StoreChangelogReader.pollRecordsFromRestoreConsumer(StoreChangelogReader.java:495)
	... 4 common frames omitted
2025-05-29 17:31:23.090 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] WARN  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Detected the states of tasks [0_2] are corrupted. Will close the task as dirty and re-create and bootstrap from scratch.
org.apache.kafka.streams.errors.TaskCorruptedException: Tasks [0_2] are corrupted and hence need to be re-initialized
	at org.apache.kafka.streams.processor.internals.TaskManager.maybeThrowTaskExceptions(TaskManager.java:437)
	at org.apache.kafka.streams.processor.internals.TaskManager.handleExceptionsFromStateUpdater(TaskManager.java:1034)
	at org.apache.kafka.streams.processor.internals.TaskManager.checkStateUpdater(TaskManager.java:917)
	at org.apache.kafka.streams.processor.internals.StreamThread.checkStateUpdater(StreamThread.java:1191)
	at org.apache.kafka.streams.processor.internals.StreamThread.runOnceWithoutProcessingThreads(StreamThread.java:999)
	at org.apache.kafka.streams.processor.internals.StreamThread.runLoop(StreamThread.java:713)
	at org.apache.kafka.streams.processor.internals.StreamThread.run(StreamThread.java:672)
2025-05-29 17:31:23.090 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Suspended from RESTORING
2025-05-29 17:31:23.092 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] Closing record collector dirty
2025-05-29 17:31:23.092 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Closed dirty
2025-05-29 17:31:23.149 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-1 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:31:23.150 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:31:23.162 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:23.162 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 completed restoration
2025-05-29 17:31:23.162 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 was added to the state updater
2025-05-29 17:31:23.165 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-0 initialized as 0.
2025-05-29 17:31:23.166 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 initialized as 0.
2025-05-29 17:31:23.166 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-0, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:31:23.166 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:31:23.166 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:31:23.224 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:31:23.250 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:31:23.251 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store parking-occupancy-by-zone-STATE-STORE-0000000000 did not find checkpoint offset, hence would default to the starting offset at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:31:23.251 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store zone-occupancy-state did not find checkpoint offset, hence would default to the starting offset at changelog spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:31:23.251 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Initialized
2025-05-29 17:31:23.252 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-1
2025-05-29 17:31:23.253 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-1
2025-05-29 17:31:23.253 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] No custom setting defined for topic 'parking-events-proto' using original config 'earliest' for offset reset
2025-05-29 17:31:23.253 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] No custom setting defined for topic 'parking-occupancy-by-zone' using original config 'earliest' for offset reset
2025-05-29 17:31:23.253 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Seeking to earliest offset of partition parking-events-proto-1
2025-05-29 17:31:23.253 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Seeking to earliest offset of partition parking-occupancy-by-zone-1
2025-05-29 17:31:23.266 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Restored and ready to run
2025-05-29 17:31:23.267 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:23.268 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:23.289 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:31:23.306 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:31:23.306 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:31:23.311 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:31:23.311 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:31:23.551 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:23.551 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:23.652 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-0 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:31:23.652 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:31:23.663 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:23.663 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 completed restoration
2025-05-29 17:31:23.663 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 was added to the state updater
2025-05-29 17:31:23.666 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 initialized as 0.
2025-05-29 17:31:23.666 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-2 initialized as 0.
2025-05-29 17:31:23.666 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2, spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:31:23.666 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:31:23.666 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:31:23.720 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 17:31:23.720 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:31:23.720 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] No custom setting defined for topic 'parking-events-proto' using original config 'earliest' for offset reset
2025-05-29 17:31:23.720 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] No custom setting defined for topic 'parking-occupancy-by-zone' using original config 'earliest' for offset reset
2025-05-29 17:31:23.720 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Seeking to earliest offset of partition parking-events-proto-0
2025-05-29 17:31:23.720 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Seeking to earliest offset of partition parking-occupancy-by-zone-0
2025-05-29 17:31:23.733 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Restored and ready to run
2025-05-29 17:31:23.777 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:23.777 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:23.834 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-0 in order to compute lag
2025-05-29 17:31:23.837 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-0 in order to compute lag
2025-05-29 17:31:23.961 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:31:24.058 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:24.058 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:24.160 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:31:24.160 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-2 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:31:24.174 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:24.174 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 completed restoration
2025-05-29 17:31:24.270 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 17:31:24.271 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:31:24.271 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] No custom setting defined for topic 'parking-events-proto' using original config 'earliest' for offset reset
2025-05-29 17:31:24.271 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] No custom setting defined for topic 'parking-occupancy-by-zone' using original config 'earliest' for offset reset
2025-05-29 17:31:24.271 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Seeking to earliest offset of partition parking-events-proto-2
2025-05-29 17:31:24.271 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Seeking to earliest offset of partition parking-occupancy-by-zone-2
2025-05-29 17:31:24.284 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Restored and ready to run
2025-05-29 17:31:24.284 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PARTITIONS_ASSIGNED to RUNNING
2025-05-29 17:31:24.285 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from REBALANCING to RUNNING
2025-05-29 17:31:24.386 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-2 in order to compute lag
2025-05-29 17:31:24.387 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-2 in order to compute lag
2025-05-29 17:31:24.467 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:24.467 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:31:24.972 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:31:25.970 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:31:26.967 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:31:27.569 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Revoke previously assigned partitions parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:31:27.569 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions revoked: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:31:27.569 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Member consumer-zone-status-cache-updater-1-38fa8dd8-f0bc-4450-bbfd-ded110ffec2a sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-05-29 17:31:27.570 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:31:27.570 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:31:27.570 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:27.570 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:31:27.570 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:31:27.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:31:27.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:31:27.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:31:27.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:31:27.726 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-zone-status-cache-updater-1 unregistered
2025-05-29 17:31:27.726 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: Consumer stopped
2025-05-29 17:31:27.727 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 17:31:27.727 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Informed to shut down
2025-05-29 17:31:27.727 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 17:31:27.727 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutting down 1 stream threads
2025-05-29 17:31:27.778 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutting down clean
2025-05-29 17:31:27.778 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Shutting down state updater thread
2025-05-29 17:31:27.778 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:27.779 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread stopped
2025-05-29 17:31:27.872 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Suspended from RUNNING
2025-05-29 17:31:27.876 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] Closing record collector clean
2025-05-29 17:31:27.876 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Closed clean
2025-05-29 17:31:27.876 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Suspended from RUNNING
2025-05-29 17:31:27.884 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] Closing record collector clean
2025-05-29 17:31:27.884 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Closed clean
2025-05-29 17:31:27.884 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Suspended from RUNNING
2025-05-29 17:31:27.887 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] Closing record collector clean
2025-05-29 17:31:27.887 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Closed clean
2025-05-29 17:31:27.888 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2025-05-29 17:31:27.889 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:31:27.889 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:31:27.890 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:31:27.890 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:31:27.890 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer unregistered
2025-05-29 17:31:27.890 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 17:31:27.890 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:31:27.892 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:31:27.892 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:31:27.892 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:31:27.892 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:31:27.893 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer unregistered
2025-05-29 17:31:27.893 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Node 1 sent an invalid full fetch response with extraIds=(TSKIm3ikS6GtK0LvHh5chQ, Gyy_zbmNRsur6EPuPObJSA), response=()
2025-05-29 17:31:27.894 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:31:27.894 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:31:27.894 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:31:27.894 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:31:27.895 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer unregistered
2025-05-29 17:31:27.895 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PENDING_SHUTDOWN to DEAD
2025-05-29 17:31:27.895 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 17:31:27.896 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutdown 1 stream threads complete
2025-05-29 17:31:27.896 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin unregistered
2025-05-29 17:31:27.897 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:31:27.897 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:31:27.897 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:31:27.897 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:31:27.897 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:31:27.897 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:31:27.897 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from PENDING_SHUTDOWN to NOT_RUNNING
2025-05-29 17:31:27.897 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Streams client stopped completely
2025-05-29 17:31:27.898 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-29 17:31:27.900 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-29 17:31:27.901 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-05-29 17:31:27.902 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:31:27.902 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:31:27.902 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:31:27.902 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:31:27.902 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for parking-service-producer-1 unregistered
2025-05-29 17:37:47.115 [main] INFO  c.e.p.ParkingServiceApplicationKt - Starting ParkingServiceApplicationKt using Java 17.0.9 with PID 78046 (/Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin/build/classes/kotlin/main started by sjacobs in /Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin)
2025-05-29 17:37:47.117 [main] INFO  c.e.p.ParkingServiceApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-05-29 17:37:47.777 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-29 17:37:47.782 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-29 17:37:47.783 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-29 17:37:47.783 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-05-29 17:37:47.807 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-29 17:37:47.807 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 667 ms
2025-05-29 17:37:47.939 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:37:47.998 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:37:48.002 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:37:48.003 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:37:48.021 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:37:48.033 [main] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 17:37:48.099 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-05-29 17:37:48.298 [main] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'parkingZones' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-05-29 17:37:48.360 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-29 17:37:48.404 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-29 17:37:48.409 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-05-29 17:37:48.411 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:37:48.427 [main] WARN  o.a.k.s.p.internals.StateDirectory - Using an OS temp directory in the state.dir property can cause failures with writing the checkpoint file due to the fact that this directory can be cleared by the OS. Resolved state.dir: [/var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams]
2025-05-29 17:37:48.448 [main] INFO  o.a.k.s.p.internals.StateDirectory - Reading UUID from process file: f294a983-f966-41c8-bf03-75531a0ecc72
2025-05-29 17:37:48.453 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-05-29 17:37:48.476 [main] INFO  o.a.k.c.admin.AdminClientConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:37:48.476 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:37:48.476 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:37:48.476 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554668476
2025-05-29 17:37:48.477 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams version: 3.9.1
2025-05-29 17:37:48.477 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams commit ID: f745dfdcee2b9851
2025-05-29 17:37:48.482 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating restore consumer client
2025-05-29 17:37:48.483 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = null
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:37:48.500 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:37:48.517 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:37:48.517 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:37:48.517 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:37:48.517 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554668517
2025-05-29 17:37:48.521 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating thread producer client
2025-05-29 17:37:48.524 [main] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 100
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2025-05-29 17:37:48.525 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:37:48.531 [main] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Instantiated an idempotent producer.
2025-05-29 17:37:48.539 [main] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:37:48.539 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:37:48.539 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:37:48.539 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554668539
2025-05-29 17:37:48.547 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread started
2025-05-29 17:37:48.550 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating consumer client
2025-05-29 17:37:48.552 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = false
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-parking-events-app
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:37:48.557 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:37:48.563 [main] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Cooperative rebalancing protocol is enabled now
2025-05-29 17:37:48.572 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[replication.factor, probing.rebalance.interval.ms, max.warmup.replicas, acceptable.recovery.lag, schema.registry.url, task.assignor.class, rack.aware.assignment.non_overlap_cost, application.server, rack.aware.assignment.strategy, rack.aware.assignment.traffic_cost, windowstore.changelog.additional.retention.ms, num.standby.replicas, upgrade.from, rack.aware.assignment.tags, application.id]' were supplied but are not used yet.
2025-05-29 17:37:48.572 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:37:48.572 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:37:48.572 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554668572
2025-05-29 17:37:48.575 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from CREATED to REBALANCING
2025-05-29 17:37:48.575 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Started 1 stream threads
2025-05-29 17:37:48.575 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Starting
2025-05-29 17:37:48.575 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from CREATED to STARTING
2025-05-29 17:37:48.575 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Subscribed to topic(s): parking-events-proto, parking-occupancy-by-zone
2025-05-29 17:37:48.596 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-zone-status-cache-updater-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = zone-status-cache-updater
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-05-29 17:37:48.596 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:37:48.598 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:37:48.598 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:37:48.598 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:37:48.598 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554668598
2025-05-29 17:37:48.599 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Subscribed to topic(s): parking-occupancy-by-zone
2025-05-29 17:37:48.621 [main] INFO  c.e.p.ParkingServiceApplicationKt - Started ParkingServiceApplicationKt in 1.7 seconds (process running for 2.215)
2025-05-29 17:37:53.909 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = parking-service-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer

2025-05-29 17:37:53.909 [scheduling-1] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:37:53.910 [scheduling-1] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:37:53.911 [scheduling-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Instantiated an idempotent producer.
2025-05-29 17:37:53.913 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:37:53.913 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:37:53.913 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:37:53.913 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554673913
2025-05-29 17:37:53.931 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Processed 0 total records, ran 0 punctuators, polled 1 times and committed 0 total tasks since the last update 1748554673932ms ago
2025-05-29 17:37:53.962 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:37:53.963 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:37:53.963 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] ProducerId set to 2 with epoch 0
2025-05-29 17:37:53.963 [kafka-producer-network-thread | parking-service-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=parking-service-producer-1] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:37:53.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:37:53.963 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:37:53.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:37:53.963 [kafka-producer-network-thread | parking-service-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=parking-service-producer-1] ProducerId set to 3 with epoch 0
2025-05-29 17:37:53.964 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:37:53.964 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:37:53.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: need to re-join with the given member-id: consumer-zone-status-cache-updater-1-5bf81c50-161e-4f6c-a854-f05f654250fb
2025-05-29 17:37:53.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:37:53.972 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Request joining group due to: need to re-join with the given member-id: spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-b7730d1a-2031-4939-93a6-9de0cb613d3c
2025-05-29 17:37:53.972 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:37:54.013 [RMI TCP Connection(2)-192.168.68.224] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-29 17:37:54.013 [RMI TCP Connection(2)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-29 17:37:54.015 [RMI TCP Connection(2)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-29 17:38:03.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully joined group with generation Generation{generationId=3, memberId='consumer-zone-status-cache-updater-1-5bf81c50-161e-4f6c-a854-f05f654250fb', protocol='range'}
2025-05-29 17:38:03.905 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully joined group with generation Generation{generationId=3, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-b7730d1a-2031-4939-93a6-9de0cb613d3c', protocol='stream'}
2025-05-29 17:38:03.913 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Finished assignment for group at generation 3: {consumer-zone-status-cache-updater-1-5bf81c50-161e-4f6c-a854-f05f654250fb=Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])}
2025-05-29 17:38:03.913 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RepartitionTopics - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Skipping the repartition topic validation since there are no repartition topics.
2025-05-29 17:38:03.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully synced group in generation Generation{generationId=3, memberId='consumer-zone-status-cache-updater-1-5bf81c50-161e-4f6c-a854-f05f654250fb', protocol='range'}
2025-05-29 17:38:03.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Notifying assignor about the new Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])
2025-05-29 17:38:03.922 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Adding newly assigned partitions: parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:38:03.928 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:38:03.929 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:38:03.929 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:38:03.929 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions assigned: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:38:03.938 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] 1 client nodes and 1 consumers participating in this rebalance: 
f294a983-f966-41c8-bf03-75531a0ecc72: [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-b7730d1a-2031-4939-93a6-9de0cb613d3c].
2025-05-29 17:38:03.938 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigning stateful tasks: [0_2, 0_1, 0_0]
and stateless tasks: []
2025-05-29 17:38:03.938 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No custom task assignors found, defaulting to internal task assignment with internal.task.assignor.class
2025-05-29 17:38:03.941 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.HighAvailabilityTaskAssignor - Decided on assignment: {f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([]) prevActiveTasks: ([]) prevStandbyTasks: ([0_0, 0_1, 0_2]) changelogOffsetTotalsByTask: ([0_0=0, 0_1=2, 0_2=0]) taskLagTotals: ([0_0=0, 0_1=1, 0_2=0]) clientTags: ([]) capacity: 1 assigned: 3]} with no followup probing rebalance.
2025-05-29 17:38:03.941 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigned 3 total tasks including 3 stateful tasks to 1 client nodes.
2025-05-29 17:38:03.941 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assignment of tasks to nodes: f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([])]
2025-05-29 17:38:03.943 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Client f294a983-f966-41c8-bf03-75531a0ecc72 per-consumer assignment:
	prev owned active {}
	prev owned standby {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-b7730d1a-2031-4939-93a6-9de0cb613d3c=[0_2, 0_1, 0_0]}
	assigned active {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-b7730d1a-2031-4939-93a6-9de0cb613d3c=[0_2, 0_1, 0_0]}
	revoking active {}
	assigned standby {}

2025-05-29 17:38:03.943 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Finished stable assignment of tasks, no followup rebalances required.
2025-05-29 17:38:03.943 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Finished assignment for group at generation 3: {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-b7730d1a-2031-4939-93a6-9de0cb613d3c=Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)}
2025-05-29 17:38:03.945 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully synced group in generation Generation{generationId=3, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-b7730d1a-2031-4939-93a6-9de0cb613d3c', protocol='stream'}
2025-05-29 17:38:03.945 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Updating assignment with
	Assigned partitions:                       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Current owned partitions:                  []
	Added partitions (assigned - owned):       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Revoked partitions (owned - assigned):     []

2025-05-29 17:38:03.945 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Notifying assignor about the new Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)
2025-05-29 17:38:03.946 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No followup rebalance was requested, resetting the rebalance schedule.
2025-05-29 17:38:03.947 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Handle new assignment with:
	New active tasks: [0_2, 0_1, 0_0]
	New standby tasks: []
	Existing active tasks: []
	Existing standby tasks: []
2025-05-29 17:38:03.946 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
C, headers={kafka_offset=0, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=C, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554282960, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:03.948 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 1 for partition parking-occupancy-by-zone-1
2025-05-29 17:38:03.958 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Adding newly assigned partitions: parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:38:03.958 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from STARTING to PARTITIONS_ASSIGNED
2025-05-29 17:38:03.960 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:38:03.960 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 17:38:03.960 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-1
2025-05-29 17:38:03.960 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:38:03.960 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 17:38:03.960 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-events-proto-1 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:38:03.967 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:03.967 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:03.967 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:03.967 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:03.967 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:04.284 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:38:04.317 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:38:04.318 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset null at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:38:04.318 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:38:04.318 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Initialized
2025-05-29 17:38:04.318 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 was added to the state updater
2025-05-29 17:38:04.322 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-0 initialized as 0.
2025-05-29 17:38:04.322 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 initialized as 0.
2025-05-29 17:38:04.323 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-0, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:38:04.323 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:38:04.327 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:38:04.332 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:38:04.335 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:04.337 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:04.348 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:38:04.377 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:38:04.377 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset null at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:38:04.377 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store zone-occupancy-state initialized from checkpoint with offset 2 at changelog spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:38:04.377 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Initialized
2025-05-29 17:38:04.407 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:38:04.433 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:38:04.434 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset null at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:38:04.434 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:38:04.434 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Initialized
2025-05-29 17:38:04.438 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-0 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:38:04.438 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:38:04.447 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
A, headers={kafka_offset=1, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=A, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554284961, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:04.450 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 2 for partition parking-occupancy-by-zone-1
2025-05-29 17:38:04.450 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:38:04.450 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 completed restoration
2025-05-29 17:38:04.450 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 was added to the state updater
2025-05-29 17:38:04.450 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 was added to the state updater
2025-05-29 17:38:04.452 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 initialized as 0.
2025-05-29 17:38:04.453 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-1 initialized as 3.
2025-05-29 17:38:04.453 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 initialized as 0.
2025-05-29 17:38:04.453 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-2 initialized as 0.
2025-05-29 17:38:04.453 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2, spring-parking-events-app-zone-occupancy-state-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1, spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:38:04.453 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 3 for partition spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:38:04.453 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:38:04.453 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:38:04.453 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:38:04.539 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 17:38:04.539 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:38:04.555 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Restored and ready to run
2025-05-29 17:38:04.656 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-0 in order to compute lag
2025-05-29 17:38:04.659 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-0 in order to compute lag
2025-05-29 17:38:04.844 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:04.844 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:04.844 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:38:04.946 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-1 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:38:04.946 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:38:04.946 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:38:04.946 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-2 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:38:04.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
B, headers={kafka_offset=2, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=B, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554286960, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:04.959 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:38:04.960 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 completed restoration
2025-05-29 17:38:04.967 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 17:38:04.970 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:38:04.976 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:38:04.977 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 completed restoration
2025-05-29 17:38:04.986 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Restored and ready to run
2025-05-29 17:38:05.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-2 in order to compute lag
2025-05-29 17:38:05.089 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-2 in order to compute lag
2025-05-29 17:38:05.091 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-1
2025-05-29 17:38:05.108 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Restored and ready to run
2025-05-29 17:38:05.109 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PARTITIONS_ASSIGNED to RUNNING
2025-05-29 17:38:05.110 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from REBALANCING to RUNNING
2025-05-29 17:38:05.212 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-1 in order to compute lag
2025-05-29 17:38:05.212 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-1 in order to compute lag
2025-05-29 17:38:05.621 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:05.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:38:05.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=2
2025-05-29 17:38:05.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:38:05.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=2
2025-05-29 17:38:05.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:05.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:05.634 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:06.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:07.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:08.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:09.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:10.627 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:11.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:12.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:13.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=0
2025-05-29 17:38:14.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:15.634 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:16.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=2
2025-05-29 17:38:17.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:18.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:19.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:20.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=2
2025-05-29 17:38:21.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:22.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:38:23.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:23.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
B, headers={kafka_offset=3, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=B, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554700622, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:23.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 4 for partition parking-occupancy-by-zone-1
2025-05-29 17:38:24.481 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
A, headers={kafka_offset=4, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=A, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554702625, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:24.482 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 5 for partition parking-occupancy-by-zone-1
2025-05-29 17:38:24.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:38:24.990 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
C, headers={kafka_offset=5, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=C, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554703624, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:25.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:38:26.634 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:38:27.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:38:28.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:38:29.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:38:30.634 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:38:31.634 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:32.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:38:33.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:34.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:38:35.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:36.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:37.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:38.624 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:39.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:40.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:38:41.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:38:42.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:43.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:44.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:38:45.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:38:46.634 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:38:47.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:38:48.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:49.624 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:38:50.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=1
2025-05-29 17:38:51.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:38:52.626 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:38:53.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:38:54.050 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
A, headers={kafka_offset=6, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=A, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554719625, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:54.051 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 7 for partition parking-occupancy-by-zone-1
2025-05-29 17:38:54.556 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
B, headers={kafka_offset=7, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=B, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554732621, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:54.557 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 8 for partition parking-occupancy-by-zone-1
2025-05-29 17:38:54.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:38:55.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@42211e04]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
C, headers={kafka_offset=8, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1be2c171, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=C, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554733625, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:38:55.627 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:38:56.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:57.626 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:38:58.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:38:59.627 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:39:00.630 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:39:01.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:39:01.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Revoke previously assigned partitions parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:39:01.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions revoked: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:39:01.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Member consumer-zone-status-cache-updater-1-5bf81c50-161e-4f6c-a854-f05f654250fb sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-05-29 17:39:01.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:39:01.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:39:01.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:39:01.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:39:01.982 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:39:02.121 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:39:02.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:39:02.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:39:02.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:39:02.126 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-zone-status-cache-updater-1 unregistered
2025-05-29 17:39:02.126 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: Consumer stopped
2025-05-29 17:39:02.127 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 17:39:02.128 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Informed to shut down
2025-05-29 17:39:02.128 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 17:39:02.128 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutting down 1 stream threads
2025-05-29 17:39:02.137 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutting down clean
2025-05-29 17:39:02.137 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Shutting down state updater thread
2025-05-29 17:39:02.137 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:39:02.137 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread stopped
2025-05-29 17:39:02.212 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Suspended from RUNNING
2025-05-29 17:39:02.218 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] Closing record collector clean
2025-05-29 17:39:02.218 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Closed clean
2025-05-29 17:39:02.219 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Suspended from RUNNING
2025-05-29 17:39:02.227 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] Closing record collector clean
2025-05-29 17:39:02.227 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Closed clean
2025-05-29 17:39:02.227 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Suspended from RUNNING
2025-05-29 17:39:02.230 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] Closing record collector clean
2025-05-29 17:39:02.230 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Closed clean
2025-05-29 17:39:02.230 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2025-05-29 17:39:02.232 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:39:02.232 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:39:02.232 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:39:02.232 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:39:02.232 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer unregistered
2025-05-29 17:39:02.232 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 17:39:02.232 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:39:02.233 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:39:02.233 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:39:02.234 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:39:02.234 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:39:02.235 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer unregistered
2025-05-29 17:39:02.235 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Node 1 sent an invalid full fetch response with extraIds=(TSKIm3ikS6GtK0LvHh5chQ, Gyy_zbmNRsur6EPuPObJSA), response=()
2025-05-29 17:39:02.236 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:39:02.236 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:39:02.236 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:39:02.236 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:39:02.237 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer unregistered
2025-05-29 17:39:02.237 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PENDING_SHUTDOWN to DEAD
2025-05-29 17:39:02.237 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 17:39:02.237 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutdown 1 stream threads complete
2025-05-29 17:39:02.237 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin unregistered
2025-05-29 17:39:02.238 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:39:02.238 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:39:02.238 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:39:02.238 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:39:02.238 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:39:02.238 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:39:02.238 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from PENDING_SHUTDOWN to NOT_RUNNING
2025-05-29 17:39:02.238 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Streams client stopped completely
2025-05-29 17:39:02.239 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-29 17:39:02.241 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-29 17:39:02.242 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-05-29 17:39:02.243 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:39:02.243 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:39:02.243 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:39:02.243 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:39:02.243 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for parking-service-producer-1 unregistered
2025-05-29 17:39:05.546 [main] INFO  c.e.p.ParkingServiceApplicationKt - Starting ParkingServiceApplicationKt using Java 17.0.9 with PID 78699 (/Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin/build/classes/kotlin/main started by sjacobs in /Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin)
2025-05-29 17:39:05.547 [main] INFO  c.e.p.ParkingServiceApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-05-29 17:39:06.170 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-29 17:39:06.175 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-29 17:39:06.175 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-29 17:39:06.175 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-05-29 17:39:06.197 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-29 17:39:06.197 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 624 ms
2025-05-29 17:39:06.348 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:39:06.426 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:39:06.432 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:39:06.434 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:39:06.455 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:39:06.468 [main] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 17:39:06.546 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-05-29 17:39:06.760 [main] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'parkingZones' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-05-29 17:39:06.817 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-29 17:39:06.859 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-29 17:39:06.865 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-05-29 17:39:06.867 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:39:06.885 [main] WARN  o.a.k.s.p.internals.StateDirectory - Using an OS temp directory in the state.dir property can cause failures with writing the checkpoint file due to the fact that this directory can be cleared by the OS. Resolved state.dir: [/var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams]
2025-05-29 17:39:06.906 [main] INFO  o.a.k.s.p.internals.StateDirectory - Reading UUID from process file: f294a983-f966-41c8-bf03-75531a0ecc72
2025-05-29 17:39:06.912 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-05-29 17:39:06.932 [main] INFO  o.a.k.c.admin.AdminClientConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:39:06.933 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:39:06.933 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:39:06.933 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554746932
2025-05-29 17:39:06.933 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams version: 3.9.1
2025-05-29 17:39:06.934 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams commit ID: f745dfdcee2b9851
2025-05-29 17:39:06.938 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating restore consumer client
2025-05-29 17:39:06.939 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = null
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:39:06.953 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:39:06.968 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:39:06.968 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:39:06.968 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:39:06.968 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554746968
2025-05-29 17:39:06.970 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating thread producer client
2025-05-29 17:39:06.976 [main] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 100
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2025-05-29 17:39:06.976 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:39:06.981 [main] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Instantiated an idempotent producer.
2025-05-29 17:39:06.987 [main] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:39:06.987 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:39:06.987 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:39:06.987 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554746987
2025-05-29 17:39:06.990 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread started
2025-05-29 17:39:06.993 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating consumer client
2025-05-29 17:39:06.995 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = false
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-parking-events-app
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:39:06.998 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:39:07.004 [main] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Cooperative rebalancing protocol is enabled now
2025-05-29 17:39:07.011 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[replication.factor, probing.rebalance.interval.ms, max.warmup.replicas, acceptable.recovery.lag, schema.registry.url, task.assignor.class, rack.aware.assignment.non_overlap_cost, application.server, rack.aware.assignment.strategy, rack.aware.assignment.traffic_cost, windowstore.changelog.additional.retention.ms, num.standby.replicas, upgrade.from, rack.aware.assignment.tags, application.id]' were supplied but are not used yet.
2025-05-29 17:39:07.012 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:39:07.012 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:39:07.012 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554747012
2025-05-29 17:39:07.014 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from CREATED to REBALANCING
2025-05-29 17:39:07.014 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Started 1 stream threads
2025-05-29 17:39:07.014 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Starting
2025-05-29 17:39:07.014 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from CREATED to STARTING
2025-05-29 17:39:07.015 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Subscribed to topic(s): parking-events-proto, parking-occupancy-by-zone
2025-05-29 17:39:07.036 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-zone-status-cache-updater-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = zone-status-cache-updater
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-05-29 17:39:07.036 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:39:07.038 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:39:07.039 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:39:07.039 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:39:07.039 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554747039
2025-05-29 17:39:07.039 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Subscribed to topic(s): parking-occupancy-by-zone
2025-05-29 17:39:07.054 [main] INFO  c.e.p.ParkingServiceApplicationKt - Started ParkingServiceApplicationKt in 1.659 seconds (process running for 2.075)
2025-05-29 17:39:07.067 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = parking-service-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer

2025-05-29 17:39:07.067 [scheduling-1] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:39:07.069 [scheduling-1] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:39:07.070 [scheduling-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Instantiated an idempotent producer.
2025-05-29 17:39:07.073 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:39:07.073 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:39:07.073 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:39:07.073 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554747073
2025-05-29 17:39:07.110 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:39:07.110 [kafka-producer-network-thread | parking-service-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=parking-service-producer-1] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:39:07.110 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:39:07.110 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] ProducerId set to 4 with epoch 0
2025-05-29 17:39:07.110 [kafka-producer-network-thread | parking-service-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=parking-service-producer-1] ProducerId set to 5 with epoch 0
2025-05-29 17:39:07.110 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:39:07.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:39:07.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:39:07.111 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:39:07.111 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:39:07.117 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Processed 0 total records, ran 0 punctuators, polled 1 times and committed 0 total tasks since the last update 1748554747118ms ago
2025-05-29 17:39:07.117 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: need to re-join with the given member-id: consumer-zone-status-cache-updater-1-3e915728-0e2d-48e6-b03e-792b3600873b
2025-05-29 17:39:07.117 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:39:07.120 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Request joining group due to: need to re-join with the given member-id: spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-a8ed3c32-24ca-4c67-9dcb-485bd8b50984
2025-05-29 17:39:07.120 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:39:07.257 [RMI TCP Connection(2)-192.168.68.224] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-29 17:39:07.258 [RMI TCP Connection(2)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-29 17:39:07.259 [RMI TCP Connection(2)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-29 17:39:10.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully joined group with generation Generation{generationId=5, memberId='consumer-zone-status-cache-updater-1-3e915728-0e2d-48e6-b03e-792b3600873b', protocol='range'}
2025-05-29 17:39:10.130 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Finished assignment for group at generation 5: {consumer-zone-status-cache-updater-1-3e915728-0e2d-48e6-b03e-792b3600873b=Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])}
2025-05-29 17:39:10.135 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully synced group in generation Generation{generationId=5, memberId='consumer-zone-status-cache-updater-1-3e915728-0e2d-48e6-b03e-792b3600873b', protocol='range'}
2025-05-29 17:39:10.135 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Notifying assignor about the new Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])
2025-05-29 17:39:10.137 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Adding newly assigned partitions: parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:39:10.145 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:39:10.145 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-1 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:39:10.145 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:39:10.146 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions assigned: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:39:10.158 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@2f471037]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
B, headers={kafka_offset=9, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2c8c6f9e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=B, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554735624, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:39:10.159 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 10 for partition parking-occupancy-by-zone-1
2025-05-29 17:39:10.661 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@2f471037]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
A, headers={kafka_offset=10, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2c8c6f9e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=A, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554739623, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:39:10.662 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 11 for partition parking-occupancy-by-zone-1
2025-05-29 17:39:11.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@2f471037]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
C, headers={kafka_offset=11, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2c8c6f9e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=C, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554741625, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:39:17.274 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Revoke previously assigned partitions parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:39:17.274 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions revoked: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:39:17.274 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Member consumer-zone-status-cache-updater-1-3e915728-0e2d-48e6-b03e-792b3600873b sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-05-29 17:39:17.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:39:17.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:39:17.275 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:39:17.276 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:39:17.276 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:40:18.257 [main] INFO  c.e.p.ParkingServiceApplicationKt - Starting ParkingServiceApplicationKt using Java 17.0.9 with PID 79300 (/Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin/build/classes/kotlin/main started by sjacobs in /Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin)
2025-05-29 17:40:18.258 [main] INFO  c.e.p.ParkingServiceApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-05-29 17:40:18.916 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-29 17:40:18.921 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-29 17:40:18.922 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-29 17:40:18.922 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-05-29 17:40:18.942 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-29 17:40:18.942 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 663 ms
2025-05-29 17:40:19.072 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:40:19.127 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:40:19.131 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:40:19.132 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:40:19.148 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class io.confluent.kafka.streams.serdes.protobuf.KafkaProtobufSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:40:19.157 [main] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 17:40:19.226 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-05-29 17:40:19.420 [main] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'parkingZones' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-05-29 17:40:19.489 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-29 17:40:19.535 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-29 17:40:19.541 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-05-29 17:40:19.542 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class io.confluent.kafka.streams.serdes.protobuf.KafkaProtobufSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:40:19.559 [main] WARN  o.a.k.s.p.internals.StateDirectory - Using an OS temp directory in the state.dir property can cause failures with writing the checkpoint file due to the fact that this directory can be cleared by the OS. Resolved state.dir: [/var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams]
2025-05-29 17:40:19.582 [main] INFO  o.a.k.s.p.internals.StateDirectory - Reading UUID from process file: f294a983-f966-41c8-bf03-75531a0ecc72
2025-05-29 17:40:19.588 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-05-29 17:40:19.611 [main] INFO  o.a.k.c.admin.AdminClientConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:40:19.611 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:40:19.611 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:40:19.611 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554819611
2025-05-29 17:40:19.612 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams version: 3.9.1
2025-05-29 17:40:19.612 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams commit ID: f745dfdcee2b9851
2025-05-29 17:40:19.617 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating restore consumer client
2025-05-29 17:40:19.618 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = null
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:40:19.635 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:40:19.651 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:40:19.651 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:40:19.651 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:40:19.651 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554819651
2025-05-29 17:40:19.654 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating thread producer client
2025-05-29 17:40:19.657 [main] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 100
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2025-05-29 17:40:19.658 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:40:19.662 [main] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Instantiated an idempotent producer.
2025-05-29 17:40:19.668 [main] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:40:19.668 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:40:19.668 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:40:19.669 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554819668
2025-05-29 17:40:19.672 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread started
2025-05-29 17:40:19.674 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating consumer client
2025-05-29 17:40:19.676 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = false
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-parking-events-app
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:40:19.678 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:40:19.684 [main] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Cooperative rebalancing protocol is enabled now
2025-05-29 17:40:19.691 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[replication.factor, probing.rebalance.interval.ms, max.warmup.replicas, acceptable.recovery.lag, schema.registry.url, task.assignor.class, rack.aware.assignment.non_overlap_cost, application.server, rack.aware.assignment.strategy, rack.aware.assignment.traffic_cost, windowstore.changelog.additional.retention.ms, num.standby.replicas, upgrade.from, rack.aware.assignment.tags, application.id]' were supplied but are not used yet.
2025-05-29 17:40:19.691 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:40:19.692 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:40:19.692 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554819691
2025-05-29 17:40:19.694 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from CREATED to REBALANCING
2025-05-29 17:40:19.694 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Started 1 stream threads
2025-05-29 17:40:19.694 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Starting
2025-05-29 17:40:19.694 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from CREATED to STARTING
2025-05-29 17:40:19.694 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Subscribed to topic(s): parking-events-proto, parking-occupancy-by-zone
2025-05-29 17:40:19.712 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-zone-status-cache-updater-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = zone-status-cache-updater
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-05-29 17:40:19.713 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:40:19.714 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:40:19.714 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:40:19.714 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:40:19.714 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554819714
2025-05-29 17:40:19.715 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Subscribed to topic(s): parking-occupancy-by-zone
2025-05-29 17:40:19.732 [main] INFO  c.e.p.ParkingServiceApplicationKt - Started ParkingServiceApplicationKt in 1.627 seconds (process running for 2.064)
2025-05-29 17:40:19.737 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = parking-service-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer

2025-05-29 17:40:19.737 [scheduling-1] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:40:19.737 [scheduling-1] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:40:19.738 [scheduling-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Instantiated an idempotent producer.
2025-05-29 17:40:19.740 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:40:19.740 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:40:19.740 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:40:19.740 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748554819740
2025-05-29 17:40:19.787 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:40:19.787 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] ProducerId set to 7 with epoch 0
2025-05-29 17:40:19.787 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:40:19.787 [kafka-producer-network-thread | parking-service-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=parking-service-producer-1] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:40:19.787 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:40:19.787 [kafka-producer-network-thread | parking-service-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=parking-service-producer-1] ProducerId set to 6 with epoch 0
2025-05-29 17:40:19.787 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:40:19.787 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:40:19.788 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:40:19.788 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:40:19.794 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Processed 0 total records, ran 0 punctuators, polled 1 times and committed 0 total tasks since the last update 1748554819795ms ago
2025-05-29 17:40:19.794 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: need to re-join with the given member-id: consumer-zone-status-cache-updater-1-d408360a-e2b2-4531-a524-6cd679512d97
2025-05-29 17:40:19.795 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:40:19.796 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Request joining group due to: need to re-join with the given member-id: spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-33986acb-6cba-46a1-a3fa-bc9ddae63218
2025-05-29 17:40:19.796 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:40:19.955 [RMI TCP Connection(4)-192.168.68.224] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-29 17:40:19.955 [RMI TCP Connection(4)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-29 17:40:19.956 [RMI TCP Connection(4)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-29 17:40:22.798 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully joined group with generation Generation{generationId=7, memberId='consumer-zone-status-cache-updater-1-d408360a-e2b2-4531-a524-6cd679512d97', protocol='range'}
2025-05-29 17:40:22.806 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Finished assignment for group at generation 7: {consumer-zone-status-cache-updater-1-d408360a-e2b2-4531-a524-6cd679512d97=Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])}
2025-05-29 17:40:22.812 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully synced group in generation Generation{generationId=7, memberId='consumer-zone-status-cache-updater-1-d408360a-e2b2-4531-a524-6cd679512d97', protocol='range'}
2025-05-29 17:40:22.813 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Notifying assignor about the new Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])
2025-05-29 17:40:22.814 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Adding newly assigned partitions: parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:40:22.824 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:40:22.825 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-1 to the committed offset FetchPosition{offset=12, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:40:22.825 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:40:22.825 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions assigned: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:40:32.151 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully joined group with generation Generation{generationId=5, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-33986acb-6cba-46a1-a3fa-bc9ddae63218', protocol='stream'}
2025-05-29 17:40:32.162 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RepartitionTopics - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Skipping the repartition topic validation since there are no repartition topics.
2025-05-29 17:40:32.188 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] 1 client nodes and 1 consumers participating in this rebalance: 
f294a983-f966-41c8-bf03-75531a0ecc72: [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-33986acb-6cba-46a1-a3fa-bc9ddae63218].
2025-05-29 17:40:32.189 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigning stateful tasks: [0_2, 0_1, 0_0]
and stateless tasks: []
2025-05-29 17:40:32.189 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No custom task assignors found, defaulting to internal task assignment with internal.task.assignor.class
2025-05-29 17:40:32.192 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.HighAvailabilityTaskAssignor - Decided on assignment: {f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([]) prevActiveTasks: ([]) prevStandbyTasks: ([0_0, 0_1, 0_2]) changelogOffsetTotalsByTask: ([0_0=0, 0_1=19, 0_2=0]) taskLagTotals: ([0_0=0, 0_1=2, 0_2=0]) clientTags: ([]) capacity: 1 assigned: 3]} with no followup probing rebalance.
2025-05-29 17:40:32.192 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigned 3 total tasks including 3 stateful tasks to 1 client nodes.
2025-05-29 17:40:32.192 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assignment of tasks to nodes: f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([])]
2025-05-29 17:40:32.194 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Client f294a983-f966-41c8-bf03-75531a0ecc72 per-consumer assignment:
	prev owned active {}
	prev owned standby {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-33986acb-6cba-46a1-a3fa-bc9ddae63218=[0_2, 0_1, 0_0]}
	assigned active {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-33986acb-6cba-46a1-a3fa-bc9ddae63218=[0_2, 0_1, 0_0]}
	revoking active {}
	assigned standby {}

2025-05-29 17:40:32.194 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Finished stable assignment of tasks, no followup rebalances required.
2025-05-29 17:40:32.195 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Finished assignment for group at generation 5: {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-33986acb-6cba-46a1-a3fa-bc9ddae63218=Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)}
2025-05-29 17:40:32.198 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully synced group in generation Generation{generationId=5, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-33986acb-6cba-46a1-a3fa-bc9ddae63218', protocol='stream'}
2025-05-29 17:40:32.199 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Updating assignment with
	Assigned partitions:                       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Current owned partitions:                  []
	Added partitions (assigned - owned):       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Revoked partitions (owned - assigned):     []

2025-05-29 17:40:32.199 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Notifying assignor about the new Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)
2025-05-29 17:40:32.199 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No followup rebalance was requested, resetting the rebalance schedule.
2025-05-29 17:40:32.201 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Handle new assignment with:
	New active tasks: [0_2, 0_1, 0_0]
	New standby tasks: []
	Existing active tasks: []
	Existing standby tasks: []
2025-05-29 17:40:32.217 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Adding newly assigned partitions: parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:40:32.218 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from STARTING to PARTITIONS_ASSIGNED
2025-05-29 17:40:32.222 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:40:32.222 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 17:40:32.222 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:40:32.222 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 17:40:32.222 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-1 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:40:32.222 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-events-proto-1 to the committed offset FetchPosition{offset=83, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:40:32.229 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:40:32.229 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:40:32.229 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:40:32.229 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:40:32.607 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:40:32.640 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:40:32.641 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset null at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:40:32.641 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:40:32.641 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Initialized
2025-05-29 17:40:32.642 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 was added to the state updater
2025-05-29 17:40:32.644 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 initialized as 0.
2025-05-29 17:40:32.644 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-2 initialized as 0.
2025-05-29 17:40:32.644 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2, spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:40:32.645 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:40:32.645 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:40:32.646 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:40:32.650 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:40:32.653 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:40:32.668 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:40:32.695 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:40:32.695 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset 8 at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:40:32.695 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store zone-occupancy-state initialized from checkpoint with offset 11 at changelog spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:40:32.695 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Initialized
2025-05-29 17:40:32.720 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:40:32.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:40:32.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset null at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:40:32.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:40:32.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Initialized
2025-05-29 17:40:32.755 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:40:32.755 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-2 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:40:32.766 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:40:32.766 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 completed restoration
2025-05-29 17:40:32.766 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 was added to the state updater
2025-05-29 17:40:32.766 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 was added to the state updater
2025-05-29 17:40:32.772 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-0 initialized as 0.
2025-05-29 17:40:32.772 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-1 initialized as 12.
2025-05-29 17:40:32.772 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 initialized as 9.
2025-05-29 17:40:32.772 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 initialized as 0.
2025-05-29 17:40:32.772 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-0, spring-parking-events-app-zone-occupancy-state-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:40:32.773 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 9 for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:40:32.773 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 12 for partition spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:40:32.773 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:40:32.773 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:40:32.848 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 17:40:32.849 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:40:32.862 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Restored and ready to run
2025-05-29 17:40:32.963 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-2 in order to compute lag
2025-05-29 17:40:32.968 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-2 in order to compute lag
2025-05-29 17:40:33.159 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:40:33.159 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:40:33.261 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-0 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:40:33.261 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-1 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:40:33.262 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:40:33.262 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:40:33.283 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-0, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:40:33.284 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 completed restoration
2025-05-29 17:40:33.297 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:40:33.297 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 completed restoration
2025-05-29 17:40:33.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Restored and ready to run
2025-05-29 17:40:33.406 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 17:40:33.407 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:40:33.418 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Restored and ready to run
2025-05-29 17:40:33.418 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PARTITIONS_ASSIGNED to RUNNING
2025-05-29 17:40:33.420 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from REBALANCING to RUNNING
2025-05-29 17:40:33.521 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-0 in order to compute lag
2025-05-29 17:40:33.522 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-0 in order to compute lag
2025-05-29 17:40:33.522 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-1 in order to compute lag
2025-05-29 17:40:33.522 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-1 in order to compute lag
2025-05-29 17:40:33.938 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:33.947 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:33.948 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:40:33.948 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:33.948 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:33.949 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:33.949 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:33.949 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:33.950 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:40:33.950 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:33.950 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:40:33.950 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:33.951 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:33.951 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:33.951 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:33.952 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:40:33.952 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:33.952 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:40:33.953 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:33.953 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:40:33.953 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:33.953 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:40:33.954 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:33.954 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:33.954 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:33.954 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:40:34.740 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:40:35.740 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:36.745 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:40:37.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:40:38.742 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:39.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:40.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:41.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:42.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:43.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:44.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:40:45.745 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:46.740 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:47.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:48.737 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:49.742 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:40:50.740 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:40:51.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:40:52.745 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:40:53.738 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:40:54.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:40:55.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:40:56.738 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:40:57.740 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:40:58.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:40:59.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:41:00.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:41:01.752 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:41:02.745 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:41:02.928 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@61dd1c3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
C, headers={kafka_offset=12, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@165357d9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=C, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554859735, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:41:02.932 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 13 for partition parking-occupancy-by-zone-1
2025-05-29 17:41:03.412 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@61dd1c3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
A, headers={kafka_offset=13, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@165357d9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=A, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554860734, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:41:03.413 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 14 for partition parking-occupancy-by-zone-1
2025-05-29 17:41:03.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:41:03.920 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@61dd1c3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
B, headers={kafka_offset=14, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@165357d9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=B, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554862736, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:41:04.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:41:05.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:41:06.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=5
2025-05-29 17:41:07.742 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:41:08.738 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:41:09.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=5
2025-05-29 17:41:10.740 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:41:11.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=5
2025-05-29 17:41:12.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:41:13.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=5
2025-05-29 17:41:14.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:41:15.737 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=5
2025-05-29 17:41:16.742 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:41:17.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:41:18.734 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:41:19.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:41:20.742 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:41:21.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:41:22.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=5
2025-05-29 17:41:23.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:41:24.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:41:25.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:41:26.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:41:27.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=5
2025-05-29 17:41:28.739 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:41:29.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:41:30.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:41:31.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:41:32.735 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:41:32.944 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@61dd1c3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
C, headers={kafka_offset=15, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@165357d9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=C, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554889736, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:41:32.945 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 16 for partition parking-occupancy-by-zone-1
2025-05-29 17:41:33.454 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@16
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@61dd1c3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
B, headers={kafka_offset=16, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@165357d9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=B, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554891734, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:41:33.455 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Seeking to offset 17 for partition parking-occupancy-by-zone-1
2025-05-29 17:41:33.737 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:41:33.959 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for parking-occupancy-by-zone-1@17
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.example.parking.consumer.ZoneStatusConsumer.consumeZoneStatus(com.example.parking.model.ZoneOccupancy)]
Bean [com.example.parking.consumer.ZoneStatusConsumer@61dd1c3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run$$$capture(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:500)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:479)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [com.example.parking.model.ZoneOccupancy] for GenericMessage [payload=    
A, headers={kafka_offset=17, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@165357d9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedMessageKey=A, kafka_receivedTopic=parking-occupancy-by-zone, kafka_receivedTimestamp=1748554892731, kafka_groupId=zone-status-cache-updater}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:475)
	... 15 common frames omitted
2025-05-29 17:41:34.743 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=4
2025-05-29 17:41:35.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:41:36.740 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:41:37.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:41:38.740 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:41:39.742 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:41:40.744 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:41:41.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:41:42.741 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=0
2025-05-29 17:41:43.742 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:41:43.959 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Revoke previously assigned partitions parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:41:43.959 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions revoked: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:41:43.959 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Member consumer-zone-status-cache-updater-1-d408360a-e2b2-4531-a524-6cd679512d97 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-05-29 17:41:43.960 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:41:43.960 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:41:43.960 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:41:43.962 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:41:43.962 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:41:44.043 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:41:44.043 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:41:44.043 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:41:44.043 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:41:44.046 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-zone-status-cache-updater-1 unregistered
2025-05-29 17:41:44.046 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: Consumer stopped
2025-05-29 17:41:44.046 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 17:41:44.047 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Informed to shut down
2025-05-29 17:41:44.047 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 17:41:44.047 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutting down 1 stream threads
2025-05-29 17:41:44.147 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutting down clean
2025-05-29 17:41:44.147 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Shutting down state updater thread
2025-05-29 17:41:44.147 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:41:44.148 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread stopped
2025-05-29 17:41:44.222 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Suspended from RUNNING
2025-05-29 17:41:44.227 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] Closing record collector clean
2025-05-29 17:41:44.227 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Closed clean
2025-05-29 17:41:44.227 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Suspended from RUNNING
2025-05-29 17:41:44.230 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] Closing record collector clean
2025-05-29 17:41:44.230 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Closed clean
2025-05-29 17:41:44.230 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Suspended from RUNNING
2025-05-29 17:41:44.233 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] Closing record collector clean
2025-05-29 17:41:44.233 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Closed clean
2025-05-29 17:41:44.234 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2025-05-29 17:41:44.235 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:41:44.235 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:41:44.235 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:41:44.235 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:41:44.235 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer unregistered
2025-05-29 17:41:44.236 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 17:41:44.236 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:41:44.237 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:41:44.238 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:41:44.238 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:41:44.238 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:41:44.239 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer unregistered
2025-05-29 17:41:44.239 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Node 1 sent an invalid full fetch response with extraIds=(TSKIm3ikS6GtK0LvHh5chQ, Gyy_zbmNRsur6EPuPObJSA), response=()
2025-05-29 17:41:44.240 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:41:44.240 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:41:44.240 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:41:44.240 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:41:44.241 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer unregistered
2025-05-29 17:41:44.242 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PENDING_SHUTDOWN to DEAD
2025-05-29 17:41:44.242 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 17:41:44.242 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutdown 1 stream threads complete
2025-05-29 17:41:44.242 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin unregistered
2025-05-29 17:41:44.243 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:41:44.243 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:41:44.243 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:41:44.243 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:41:44.243 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:41:44.243 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:41:44.243 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from PENDING_SHUTDOWN to NOT_RUNNING
2025-05-29 17:41:44.243 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Streams client stopped completely
2025-05-29 17:41:44.245 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-29 17:41:44.247 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-29 17:41:44.248 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-05-29 17:41:44.249 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:41:44.249 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:41:44.249 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:41:44.249 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:41:44.249 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for parking-service-producer-1 unregistered
2025-05-29 17:46:35.902 [main] INFO  c.e.p.ParkingServiceApplicationKt - Starting ParkingServiceApplicationKt using Java 17.0.9 with PID 82786 (/Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin/build/classes/kotlin/main started by sjacobs in /Users/sjacobs/code/opensource/sandonjacobs/talks/spring-kafka-with-kotlin)
2025-05-29 17:46:35.904 [main] INFO  c.e.p.ParkingServiceApplicationKt - No active profile set, falling back to 1 default profile: "default"
2025-05-29 17:46:36.564 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-05-29 17:46:36.569 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-05-29 17:46:36.569 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-29 17:46:36.569 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-05-29 17:46:36.589 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-29 17:46:36.589 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 661 ms
2025-05-29 17:46:36.723 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:46:36.780 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ParkingEvent
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:46:36.783 [main] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:46:36.784 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:46:36.802 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class io.confluent.kafka.streams.serdes.protobuf.KafkaProtobufSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:46:36.811 [main] INFO  c.e.p.streams.ParkingEventProcessor - Building topology with topics: parking-events=parking-events-proto, zone-occupancy=parking-occupancy-by-zone
2025-05-29 17:46:36.884 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-05-29 17:46:37.084 [main] WARN  i.m.c.i.b.cache.CaffeineCacheMetrics - The cache 'parkingZones' is not recording statistics. No meters except 'cache.size' will be registered. Call 'Caffeine#recordStats()' prior to building the cache for metrics to be recorded.
2025-05-29 17:46:37.143 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-29 17:46:37.188 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-05-29 17:46:37.193 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-05-29 17:46:37.195 [main] INFO  o.apache.kafka.streams.StreamsConfig - StreamsConfig values: 
	acceptable.recovery.lag = 10000
	application.id = spring-parking-events-app
	application.server = 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	buffered.records.per.partition = 1000
	built.in.metrics.version = latest
	cache.max.bytes.buffering = 10485760
	client.id = 
	commit.interval.ms = 30000
	connections.max.idle.ms = 540000
	default.client.supplier = class org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier
	default.deserialization.exception.handler = class org.apache.kafka.streams.errors.LogAndFailExceptionHandler
	default.dsl.store = rocksDB
	default.key.serde = class org.apache.kafka.common.serialization.Serdes$StringSerde
	default.list.key.serde.inner = null
	default.list.key.serde.type = null
	default.list.value.serde.inner = null
	default.list.value.serde.type = null
	default.production.exception.handler = class org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
	default.timestamp.extractor = class org.apache.kafka.streams.processor.FailOnInvalidTimestamp
	default.value.serde = class io.confluent.kafka.streams.serdes.protobuf.KafkaProtobufSerde
	dsl.store.suppliers.class = class org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers
	enable.metrics.push = true
	log.summary.interval.ms = 120000
	max.task.idle.ms = 0
	max.warmup.replicas = 2
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	num.standby.replicas = 0
	num.stream.threads = 1
	poll.ms = 100
	probing.rebalance.interval.ms = 600000
	processing.exception.handler = class org.apache.kafka.streams.errors.LogAndFailProcessingExceptionHandler
	processing.guarantee = at_least_once
	rack.aware.assignment.non_overlap_cost = null
	rack.aware.assignment.strategy = none
	rack.aware.assignment.tags = []
	rack.aware.assignment.traffic_cost = null
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	repartition.purge.interval.ms = 30000
	replication.factor = -1
	request.timeout.ms = 40000
	retries = 0
	retry.backoff.ms = 100
	rocksdb.config.setter = null
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	state.cleanup.delay.ms = 600000
	state.dir = /var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams
	statestore.cache.max.bytes = 10485760
	task.assignor.class = null
	task.timeout.ms = 300000
	topology.optimization = none
	upgrade.from = null
	window.size.ms = null
	windowed.inner.class.serde = null
	windowstore.changelog.additional.retention.ms = 86400000

2025-05-29 17:46:37.212 [main] WARN  o.a.k.s.p.internals.StateDirectory - Using an OS temp directory in the state.dir property can cause failures with writing the checkpoint file due to the fact that this directory can be cleared by the OS. Resolved state.dir: [/var/folders/s7/d4wqyrwn17l7gltn3nqx3zzh0000gp/T//kafka-streams]
2025-05-29 17:46:37.234 [main] INFO  o.a.k.s.p.internals.StateDirectory - Reading UUID from process file: f294a983-f966-41c8-bf03-75531a0ecc72
2025-05-29 17:46:37.241 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2025-05-29 17:46:37.263 [main] INFO  o.a.k.c.admin.AdminClientConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:46:37.263 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:46:37.264 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:46:37.264 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748555197263
2025-05-29 17:46:37.264 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams version: 3.9.1
2025-05-29 17:46:37.264 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Kafka Streams commit ID: f745dfdcee2b9851
2025-05-29 17:46:37.269 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating restore consumer client
2025-05-29 17:46:37.270 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = null
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:46:37.287 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:46:37.303 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:46:37.303 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:46:37.303 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:46:37.303 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748555197303
2025-05-29 17:46:37.306 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating thread producer client
2025-05-29 17:46:37.309 [main] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 100
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2025-05-29 17:46:37.310 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:46:37.314 [main] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Instantiated an idempotent producer.
2025-05-29 17:46:37.320 [main] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:46:37.321 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:46:37.321 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:46:37.321 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748555197321
2025-05-29 17:46:37.324 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread started
2025-05-29 17:46:37.326 [main] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Creating consumer client
2025-05-29 17:46:37.328 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = false
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-parking-events-app
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = false
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 1000
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer

2025-05-29 17:46:37.331 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:46:37.336 [main] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Cooperative rebalancing protocol is enabled now
2025-05-29 17:46:37.345 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[replication.factor, probing.rebalance.interval.ms, max.warmup.replicas, acceptable.recovery.lag, schema.registry.url, task.assignor.class, rack.aware.assignment.non_overlap_cost, application.server, rack.aware.assignment.strategy, rack.aware.assignment.traffic_cost, windowstore.changelog.additional.retention.ms, num.standby.replicas, upgrade.from, rack.aware.assignment.tags, application.id]' were supplied but are not used yet.
2025-05-29 17:46:37.345 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:46:37.345 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:46:37.345 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748555197345
2025-05-29 17:46:37.348 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from CREATED to REBALANCING
2025-05-29 17:46:37.348 [main] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Started 1 stream threads
2025-05-29 17:46:37.348 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Starting
2025-05-29 17:46:37.348 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from CREATED to STARTING
2025-05-29 17:46:37.348 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Subscribed to topic(s): parking-events-proto, parking-occupancy-by-zone
2025-05-29 17:46:37.363 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-zone-status-cache-updater-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = zone-status-cache-updater
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer

2025-05-29 17:46:37.363 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:46:37.363 [main] INFO  i.c.k.s.p.KafkaProtobufDeserializerConfig - KafkaProtobufDeserializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	derive.type = false
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	specific.protobuf.key.type = class java.lang.Object
	specific.protobuf.value.type = class com.example.parking.model.ZoneOccupancy
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:46:37.369 [main] INFO  o.a.k.c.consumer.ConsumerConfig - These configurations '[schema.registry.url, specific.protobuf.value.type]' were supplied but are not used yet.
2025-05-29 17:46:37.369 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:46:37.369 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:46:37.369 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748555197369
2025-05-29 17:46:37.370 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Subscribed to topic(s): parking-occupancy-by-zone
2025-05-29 17:46:37.386 [main] INFO  c.e.p.ParkingServiceApplicationKt - Started ParkingServiceApplicationKt in 1.643 seconds (process running for 2.105)
2025-05-29 17:46:37.397 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = parking-service-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer

2025-05-29 17:46:37.397 [scheduling-1] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-05-29 17:46:37.397 [scheduling-1] INFO  i.c.k.s.p.KafkaProtobufSerializerConfig - KafkaProtobufSerializerConfig values: 
	auto.register.schemas = true
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.cache.expiry.buffer.seconds = 300
	bearer.auth.client.id = null
	bearer.auth.client.secret = null
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.custom.provider.class = null
	bearer.auth.identity.pool.id = null
	bearer.auth.issuer.endpoint.url = null
	bearer.auth.logical.cluster = null
	bearer.auth.scope = null
	bearer.auth.scope.claim.name = scope
	bearer.auth.sub.claim.name = sub
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	http.connect.timeout.ms = 60000
	http.read.timeout.ms = 60000
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.cache.size = 1000
	latest.cache.ttl.sec = -1
	latest.compatibility.strict = true
	max.retries = 3
	max.schemas.per.subject = 1000
	normalize.schemas = false
	propagate.schema.tags = false
	proxy.host = 
	proxy.port = -1
	reference.lookup.only = false
	reference.subject.name.strategy = class io.confluent.kafka.serializers.subject.DefaultReferenceSubjectNameStrategy
	retries.max.wait.ms = 20000
	retries.wait.ms = 1000
	rule.actions = []
	rule.executors = []
	rule.service.loader.enable = true
	schema.format = null
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.3
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	skip.known.types = true
	use.latest.version = false
	use.latest.with.metadata = null
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2025-05-29 17:46:37.398 [scheduling-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Instantiated an idempotent producer.
2025-05-29 17:46:37.400 [scheduling-1] INFO  o.a.k.c.producer.ProducerConfig - These configurations '[schema.registry.url]' were supplied but are not used yet.
2025-05-29 17:46:37.400 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-05-29 17:46:37.400 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-05-29 17:46:37.400 [scheduling-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748555197400
2025-05-29 17:46:37.442 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:46:37.442 [kafka-producer-network-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] ProducerId set to 8 with epoch 0
2025-05-29 17:46:37.442 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:46:37.442 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:46:37.442 [kafka-producer-network-thread | parking-service-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=parking-service-producer-1] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:46:37.442 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:46:37.442 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-05-29 17:46:37.442 [kafka-producer-network-thread | parking-service-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=parking-service-producer-1] ProducerId set to 9 with epoch 0
2025-05-29 17:46:37.443 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:46:37.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:46:37.450 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Processed 0 total records, ran 0 punctuators, polled 1 times and committed 0 total tasks since the last update 1748555197451ms ago
2025-05-29 17:46:37.450 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: need to re-join with the given member-id: consumer-zone-status-cache-updater-1-b235b520-1802-471f-a620-48c0a45eb841
2025-05-29 17:46:37.450 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] (Re-)joining group
2025-05-29 17:46:37.451 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Request joining group due to: need to re-join with the given member-id: spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-ce5d5277-5946-49fb-9f6a-0d4a95797e5a
2025-05-29 17:46:37.451 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] (Re-)joining group
2025-05-29 17:46:37.617 [RMI TCP Connection(2)-192.168.68.224] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-29 17:46:37.618 [RMI TCP Connection(2)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-29 17:46:37.618 [RMI TCP Connection(2)-192.168.68.224] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-29 17:46:40.455 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully joined group with generation Generation{generationId=7, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-ce5d5277-5946-49fb-9f6a-0d4a95797e5a', protocol='stream'}
2025-05-29 17:46:40.455 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully joined group with generation Generation{generationId=9, memberId='consumer-zone-status-cache-updater-1-b235b520-1802-471f-a620-48c0a45eb841', protocol='range'}
2025-05-29 17:46:40.467 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Finished assignment for group at generation 9: {consumer-zone-status-cache-updater-1-b235b520-1802-471f-a620-48c0a45eb841=Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])}
2025-05-29 17:46:40.469 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RepartitionTopics - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Skipping the repartition topic validation since there are no repartition topics.
2025-05-29 17:46:40.475 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Successfully synced group in generation Generation{generationId=9, memberId='consumer-zone-status-cache-updater-1-b235b520-1802-471f-a620-48c0a45eb841', protocol='range'}
2025-05-29 17:46:40.475 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Notifying assignor about the new Assignment(partitions=[parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2])
2025-05-29 17:46:40.477 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Adding newly assigned partitions: parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:46:40.486 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:46:40.486 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-1 to the committed offset FetchPosition{offset=18, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:46:40.486 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:46:40.487 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions assigned: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:46:40.496 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] 1 client nodes and 1 consumers participating in this rebalance: 
f294a983-f966-41c8-bf03-75531a0ecc72: [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-ce5d5277-5946-49fb-9f6a-0d4a95797e5a].
2025-05-29 17:46:40.496 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigning stateful tasks: [0_2, 0_1, 0_0]
and stateless tasks: []
2025-05-29 17:46:40.497 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.AssignorConfiguration - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No custom task assignors found, defaulting to internal task assignment with internal.task.assignor.class
2025-05-29 17:46:40.500 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.a.HighAvailabilityTaskAssignor - Decided on assignment: {f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([]) prevActiveTasks: ([]) prevStandbyTasks: ([0_0, 0_1, 0_2]) changelogOffsetTotalsByTask: ([0_0=0, 0_1=37, 0_2=0]) taskLagTotals: ([0_0=0, 0_1=2, 0_2=0]) clientTags: ([]) capacity: 1 assigned: 3]} with no followup probing rebalance.
2025-05-29 17:46:40.500 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assigned 3 total tasks including 3 stateful tasks to 1 client nodes.
2025-05-29 17:46:40.500 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Assignment of tasks to nodes: f294a983-f966-41c8-bf03-75531a0ecc72=[activeTasks: ([0_0, 0_1, 0_2]) standbyTasks: ([])]
2025-05-29 17:46:40.502 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Client f294a983-f966-41c8-bf03-75531a0ecc72 per-consumer assignment:
	prev owned active {}
	prev owned standby {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-ce5d5277-5946-49fb-9f6a-0d4a95797e5a=[0_2, 0_1, 0_0]}
	assigned active {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-ce5d5277-5946-49fb-9f6a-0d4a95797e5a=[0_2, 0_1, 0_0]}
	revoking active {}
	assigned standby {}

2025-05-29 17:46:40.502 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] Finished stable assignment of tasks, no followup rebalances required.
2025-05-29 17:46:40.502 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Finished assignment for group at generation 7: {spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-ce5d5277-5946-49fb-9f6a-0d4a95797e5a=Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)}
2025-05-29 17:46:40.504 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Successfully synced group in generation Generation{generationId=7, memberId='spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer-ce5d5277-5946-49fb-9f6a-0d4a95797e5a', protocol='stream'}
2025-05-29 17:46:40.505 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Updating assignment with
	Assigned partitions:                       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Current owned partitions:                  []
	Added partitions (assigned - owned):       [parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
	Revoked partitions (owned - assigned):     []

2025-05-29 17:46:40.505 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Notifying assignor about the new Assignment(partitions=[parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2], userDataSize=112)
2025-05-29 17:46:40.505 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.StreamsPartitionAssignor - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer] No followup rebalance was requested, resetting the rebalance schedule.
2025-05-29 17:46:40.506 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Handle new assignment with:
	New active tasks: [0_2, 0_1, 0_0]
	New standby tasks: []
	Existing active tasks: []
	Existing standby tasks: []
2025-05-29 17:46:47.664 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Adding newly assigned partitions: parking-events-proto-0, parking-events-proto-1, parking-events-proto-2, parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:46:47.664 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from STARTING to PARTITIONS_ASSIGNED
2025-05-29 17:46:52.756 [kafka-coordinator-heartbeat-thread | spring-parking-events-app] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:46:54.385 [kafka-coordinator-heartbeat-thread | spring-parking-events-app] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 17:46:54.386 [kafka-coordinator-heartbeat-thread | spring-parking-events-app] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:46:54.386 [kafka-coordinator-heartbeat-thread | spring-parking-events-app] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 17:46:54.389 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone C: 2 spots occupied, -2 spots available
2025-05-29 17:46:55.399 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone B: 5 spots occupied, -5 spots available
2025-05-29 17:46:58.409 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone A: 2 spots occupied, -2 spots available
2025-05-29 17:46:58.450 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:46:58.483 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:46:58.483 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset null at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:46:58.483 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:46:58.483 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Initialized
2025-05-29 17:46:58.484 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 was added to the state updater
2025-05-29 17:46:58.489 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-0 initialized as 0.
2025-05-29 17:46:58.492 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 initialized as 0.
2025-05-29 17:46:58.492 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-0, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:46:58.493 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-0
2025-05-29 17:46:58.496 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0
2025-05-29 17:46:58.501 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Cluster ID: spring-kafka-cluster-kotlin
2025-05-29 17:46:58.506 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:46:58.506 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:46:58.512 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:46:58.541 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:46:58.542 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset 17 at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:46:58.543 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] State store zone-occupancy-state initialized from checkpoint with offset 20 at changelog spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:46:58.543 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Initialized
2025-05-29 17:46:58.573 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store parking-occupancy-by-zone-STATE-STORE-0000000000 in regular mode
2025-05-29 17:46:58.603 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.s.i.RocksDBTimestampedStore - Opening store zone-occupancy-state in regular mode
2025-05-29 17:46:58.603 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store parking-occupancy-by-zone-STATE-STORE-0000000000 initialized from checkpoint with offset null at changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:46:58.603 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.ProcessorStateManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] State store zone-occupancy-state initialized from checkpoint with offset null at changelog spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:46:58.603 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Initialized
2025-05-29 17:46:58.604 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-occupancy-by-zone-1 to the committed offset FetchPosition{offset=18, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:46:58.604 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition parking-events-proto-1 to the committed offset FetchPosition{offset=179, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-05-29 17:46:58.608 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-0 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:46:58.608 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-0 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:46:58.609 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:46:58.609 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:46:58.609 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-occupancy-by-zone-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:46:58.609 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Resetting offset for partition parking-events-proto-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:46:58.621 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:46:58.621 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_0 completed restoration
2025-05-29 17:46:58.621 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 was added to the state updater
2025-05-29 17:46:58.621 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 was added to the state updater
2025-05-29 17:46:58.624 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-1 initialized as 21.
2025-05-29 17:46:58.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 initialized as 0.
2025-05-29 17:46:58.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 initialized as 18.
2025-05-29 17:46:58.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] End offset for changelog spring-parking-events-app-zone-occupancy-state-changelog-2 initialized as 0.
2025-05-29 17:46:58.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1, spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:46:58.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 21 for partition spring-parking-events-app-zone-occupancy-state-changelog-1
2025-05-29 17:46:58.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to offset 18 for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:46:58.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2
2025-05-29 17:46:58.625 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Seeking to earliest offset of partition spring-parking-events-app-zone-occupancy-state-changelog-2
2025-05-29 17:46:58.708 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-0
2025-05-29 17:46:58.708 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-0
2025-05-29 17:46:58.724 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Restored and ready to run
2025-05-29 17:46:58.827 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-0 in order to compute lag
2025-05-29 17:46:58.831 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-0 in order to compute lag
2025-05-29 17:46:59.014 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:46:59.014 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Resetting offset for partition spring-parking-events-app-zone-occupancy-state-changelog-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-05-29 17:46:59.117 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-1 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:46:59.117 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-2 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:46:59.118 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1 to store parking-occupancy-by-zone-STATE-STORE-0000000000 with a total number of 0 records
2025-05-29 17:46:59.118 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.StoreChangelogReader - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Finished restoring changelog spring-parking-events-app-zone-occupancy-state-changelog-2 to store zone-occupancy-state with a total number of 0 records
2025-05-29 17:46:59.132 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Assigned to partition(s): spring-parking-events-app-zone-occupancy-state-changelog-1, spring-parking-events-app-parking-occupancy-by-zone-STATE-STORE-0000000000-changelog-1
2025-05-29 17:46:59.133 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_2 completed restoration
2025-05-29 17:46:59.141 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-events-proto-2
2025-05-29 17:46:59.141 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Found no committed offset for partition parking-occupancy-by-zone-2
2025-05-29 17:46:59.157 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:46:59.157 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Stateful active task 0_1 completed restoration
2025-05-29 17:46:59.162 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Restored and ready to run
2025-05-29 17:46:59.265 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-2 in order to compute lag
2025-05-29 17:46:59.266 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-2 in order to compute lag
2025-05-29 17:46:59.290 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Restored and ready to run
2025-05-29 17:46:59.291 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PARTITIONS_ASSIGNED to RUNNING
2025-05-29 17:46:59.293 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from REBALANCING to RUNNING
2025-05-29 17:46:59.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-events-proto-1 in order to compute lag
2025-05-29 17:46:59.396 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer, groupId=spring-parking-events-app] Requesting the log end offset for parking-occupancy-by-zone-1 in order to compute lag
2025-05-29 17:46:59.790 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:46:59.801 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:46:59.801 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:46:59.802 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:46:59.802 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:46:59.803 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:46:59.803 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:46:59.803 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:46:59.803 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:46:59.803 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:46:59.804 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:46:59.804 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:46:59.804 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:46:59.804 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:46:59.805 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:46:59.805 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:46:59.805 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:46:59.805 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:46:59.805 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:46:59.805 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:46:59.806 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:46:59.806 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:46:59.806 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:47:00.385 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:01.393 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:47:02.391 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:47:03.394 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:04.392 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:47:05.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:47:06.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:47:07.392 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:08.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:47:09.390 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:47:10.390 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:11.389 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:47:12.388 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:13.392 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:14.391 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:15.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:47:16.390 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:17.392 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:47:18.391 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:19.392 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:47:20.389 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:47:21.387 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:47:22.387 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:47:23.393 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=1
2025-05-29 17:47:24.392 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:47:25.392 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:47:26.175 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 72 ms
2025-05-29 17:47:26.386 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:47:27.399 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:47:28.397 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:47:28.768 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone C: 1 spots occupied, -1 spots available
2025-05-29 17:47:28.771 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone B: 4 spots occupied, -4 spots available
2025-05-29 17:47:28.772 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone A: 3 spots occupied, -3 spots available
2025-05-29 17:47:29.398 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:47:30.388 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:47:31.391 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:47:32.392 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:47:33.391 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:47:34.394 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:47:35.393 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:47:36.390 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:47:37.388 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:47:38.387 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:47:39.391 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:47:42.401 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:47:42.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:47:42.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:47:43.146 [http-nio-8080-exec-10] INFO  c.e.p.controller.ZoneController - Retrieved 3 zone statuses from cache
2025-05-29 17:47:47.972 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:47:47.983 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:47:47.984 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:47:47.984 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=2
2025-05-29 17:47:47.984 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:47:48.394 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:47:49.394 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=3
2025-05-29 17:47:50.398 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:47:51.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:47:52.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=5
2025-05-29 17:47:53.397 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=0
2025-05-29 17:47:54.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:47:55.401 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:47:56.398 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:47:57.399 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:47:58.396 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:47:58.806 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone B: 5 spots occupied, -5 spots available
2025-05-29 17:47:58.806 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone A: 4 spots occupied, -4 spots available
2025-05-29 17:47:58.807 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone C: 2 spots occupied, -2 spots available
2025-05-29 17:47:59.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:48:00.396 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:48:01.395 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:02.402 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:48:03.402 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:04.399 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:48:05.398 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:48:06.402 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:48:07.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=5
2025-05-29 17:48:08.402 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:48:09.401 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:12.583 [http-nio-8080-exec-1] INFO  c.e.p.controller.ZoneController - Retrieved 3 zone statuses from cache
2025-05-29 17:48:12.586 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=5
2025-05-29 17:48:12.587 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:48:12.588 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:13.402 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:14.404 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=5
2025-05-29 17:48:15.402 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=3
2025-05-29 17:48:16.399 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:17.404 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:48:18.405 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:19.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:48:20.406 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=6
2025-05-29 17:48:21.396 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone B occupancy updated: total=0, occupied=4
2025-05-29 17:48:22.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:23.405 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:48:24.405 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:48:25.402 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:48:26.405 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=5
2025-05-29 17:48:27.399 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=3
2025-05-29 17:48:28.397 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=1
2025-05-29 17:48:28.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone B: 4 spots occupied, -4 spots available
2025-05-29 17:48:28.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone A: 5 spots occupied, -5 spots available
2025-05-29 17:48:28.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.e.p.consumer.ZoneStatusConsumer - Updating cache for zone C: 1 spots occupied, -1 spots available
2025-05-29 17:48:29.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=4
2025-05-29 17:48:30.403 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone C occupancy updated: total=0, occupied=2
2025-05-29 17:48:31.402 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  c.e.p.streams.ParkingEventProcessor - Zone A occupancy updated: total=0, occupied=6
2025-05-29 17:48:32.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Revoke previously assigned partitions parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2
2025-05-29 17:48:32.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: partitions revoked: [parking-occupancy-by-zone-0, parking-occupancy-by-zone-1, parking-occupancy-by-zone-2]
2025-05-29 17:48:32.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Member consumer-zone-status-cache-updater-1-b235b520-1802-471f-a620-48c0a45eb841 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-05-29 17:48:32.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:48:32.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:48:32.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:48:32.107 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-05-29 17:48:32.107 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-zone-status-cache-updater-1, groupId=zone-status-cache-updater] Request joining group due to: consumer pro-actively leaving the group
2025-05-29 17:48:32.436 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:48:32.436 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:48:32.436 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:48:32.436 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:48:32.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-zone-status-cache-updater-1 unregistered
2025-05-29 17:48:32.444 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - zone-status-cache-updater: Consumer stopped
2025-05-29 17:48:32.445 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 17:48:32.447 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Informed to shut down
2025-05-29 17:48:32.447 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from RUNNING to PENDING_SHUTDOWN
2025-05-29 17:48:32.447 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutting down 1 stream threads
2025-05-29 17:48:32.514 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutting down clean
2025-05-29 17:48:32.515 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] Shutting down state updater thread
2025-05-29 17:48:32.515 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:48:32.515 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] INFO  o.a.k.s.p.i.DefaultStateUpdater - state-updater [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StateUpdater-1] State updater thread stopped
2025-05-29 17:48:32.610 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Suspended from RUNNING
2025-05-29 17:48:32.619 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_0] Closing record collector clean
2025-05-29 17:48:32.619 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_0] Closed clean
2025-05-29 17:48:32.620 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Suspended from RUNNING
2025-05-29 17:48:32.624 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_1] Closing record collector clean
2025-05-29 17:48:32.624 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_1] Closed clean
2025-05-29 17:48:32.624 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Suspended from RUNNING
2025-05-29 17:48:32.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.i.RecordCollectorImpl - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] stream-task [0_2] Closing record collector clean
2025-05-29 17:48:32.628 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamTask - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] task [0_2] Closed clean
2025-05-29 17:48:32.629 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2025-05-29 17:48:32.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:48:32.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:48:32.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:48:32.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:48:32.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-producer unregistered
2025-05-29 17:48:32.631 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.TaskManager - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 17:48:32.632 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Unsubscribed all topics or patterns and assigned partitions
2025-05-29 17:48:32.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:48:32.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:48:32.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:48:32.633 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:48:32.634 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-consumer unregistered
2025-05-29 17:48:32.634 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer, groupId=null] Node 1 sent an invalid full fetch response with extraIds=(TSKIm3ikS6GtK0LvHh5chQ, Gyy_zbmNRsur6EPuPObJSA), response=()
2025-05-29 17:48:32.635 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:48:32.635 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:48:32.635 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:48:32.635 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:48:32.636 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1-restore-consumer unregistered
2025-05-29 17:48:32.637 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] State transition from PENDING_SHUTDOWN to DEAD
2025-05-29 17:48:32.637 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] INFO  o.a.k.s.p.internals.StreamThread - stream-thread [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-StreamThread-1] Shutdown complete
2025-05-29 17:48:32.637 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Shutdown 1 stream threads complete
2025-05-29 17:48:32.637 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin unregistered
2025-05-29 17:48:32.638 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:48:32.638 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:48:32.638 [kafka-admin-client-thread | spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-admin] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:48:32.638 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:48:32.638 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:48:32.638 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:48:32.638 [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72-CloseThread] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] State transition from PENDING_SHUTDOWN to NOT_RUNNING
2025-05-29 17:48:32.638 [SpringApplicationShutdownHook] INFO  o.apache.kafka.streams.KafkaStreams - stream-client [spring-parking-events-app-f294a983-f966-41c8-bf03-75531a0ecc72] Streams client stopped completely
2025-05-29 17:48:32.639 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-29 17:48:32.642 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-29 17:48:32.643 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=parking-service-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-05-29 17:48:32.644 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-05-29 17:48:32.644 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-05-29 17:48:32.644 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-05-29 17:48:32.644 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-05-29 17:48:32.644 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for parking-service-producer-1 unregistered
